//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CreateData
// {
//
//   float3 position;                   // Offset:    0 Size:    12
//   float speed;                       // Offset:   12 Size:     4
//   float4 color;                      // Offset:   16 Size:    16
//   float life;                        // Offset:   32 Size:     4
//   float3 scale;                      // Offset:   36 Size:    12 [unused]
//   float accel;                       // Offset:   48 Size:     4
//
// }
//
// Resource bind info for particleBuffer
// {
//
//   struct ParticleData
//   {
//       
//       float3 position;               // Offset:    0
//       float3 scale;                  // Offset:   12
//       float3 angle;                  // Offset:   24
//       float3 velocity;               // Offset:   36
//       float4 color;                  // Offset:   48
//       float3 accel;                  // Offset:   64
//       float life;                    // Offset:   76
//       float timer;                   // Offset:   80
//
//   } $Element;                        // Offset:    0 Size:    84
//
// }
//
// Resource bind info for deathIndexBuffer
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// particleBuffer                        UAV  struct         r/w             u0      1 
// indexBuffer                           UAV    byte         r/w             u1      1 
// deathIndexBuffer                      UAV  struct         r/w             u3      1 
// countBuffer                           UAV    byte         r/w             u5      1 
// CreateData                        cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB1[4], immediateIndexed
dcl_uav_structured u0, 84
dcl_uav_raw u1
dcl_uav_structured u3, 4
dcl_uav_raw u5
dcl_temps 7
dcl_thread_group 1, 1, 1
//
// Initial variable locations:
//   vThreadID.x <- DTid.x; vThreadID.y <- DTid.y; vThreadID.z <- DTid.z
//
#line 19 "D:\就職作品\01\gameLib(ver 1.2)\Source\Shader\point_create_particle.hlsl"
imm_atomic_iadd r0.x, u5, l(8), l(-1)
mov r0.x, r0.x  // r0.x <- deleteCount

#line 20
if_nz r0.x

#line 23
  mov r0.y, l(1)
  ineg r0.y, r0.y
  iadd r0.y, r0.y, r0.x
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.y, r0.y, l(0), u3.xxxx  // r0.y <- newParticleIndex

#line 25
  itof r1.xyzw, l(0, 0, 0, 0)  // r1.x <- particle.scale.x; r1.y <- particle.scale.y; r1.z <- particle.scale.z; r1.w <- particle.angle.x
  itof r2.xyz, l(0, 0, 0, 0)  // r2.x <- particle.angle.y; r2.y <- particle.angle.z; r2.z <- particle.timer

#line 26
  mov r3.xyz, cb1[0].xyzx  // r3.x <- particle.position.x; r3.y <- particle.position.y; r3.z <- particle.position.z

#line 27
  nop 
  mov r0.z, l(675)
  udiv null, r0.z, r0.x, r0.z
  mov r0.w, l(234)
  udiv null, r0.w, r0.y, r0.w
  utof r4.x, r0.z
  utof r4.y, r0.w
  itof r0.z, l(1)

#line 20 "D:\就職作品\01\gameLib(ver 1.2)\Source\Shader\Lib\rand_function.hlsli"
  dp2 r0.w, r4.xyxx, r4.xyxx
  rsq r0.w, r0.w
  mul r4.xy, r0.wwww, r4.xyxx
  dp2 r0.w, r4.xyxx, l(0.163797, 0.986494, 0.000000, 0.000000)
  sincos r0.w, null, r0.w
  mul r0.w, r0.w, l(43758.546875)
  frc r4.x, r0.w  // r4.x <- noiseX

#line 21
  itof r0.w, l(1)
  mul r2.w, r4.x, r4.x
  mov r2.w, -r2.w
  add r0.w, r0.w, r2.w
  sqrt r4.y, r0.w  // r4.y <- noiseY

#line 22
  mul r4.xy, r0.zzzz, r4.xyxx  // r4.x <- <rand_2_normal return value>.x; r4.y <- <rand_2_normal return value>.y

#line 27 "D:\就職作品\01\gameLib(ver 1.2)\Source\Shader\point_create_particle.hlsl"
  nop 
  mov r0.z, l(498)
  udiv null, r0.z, r0.y, r0.z
  mov r0.w, l(321)
  udiv null, r0.w, r0.x, r0.w
  utof r5.x, r0.z
  utof r5.y, r0.w
  itof r0.z, l(1)

#line 15 "D:\就職作品\01\gameLib(ver 1.2)\Source\Shader\Lib\rand_function.hlsli"
  dp2 r0.w, r5.xyxx, r5.xyxx
  rsq r0.w, r0.w
  mul r5.xy, r0.wwww, r5.xyxx
  dp2 r0.w, r5.xyxx, l(0.163797, 0.986494, 0.000000, 0.000000)
  sincos r0.w, null, r0.w
  mul r0.w, r0.w, l(43758.546875)
  frc r5.xy, r0.wwww  // r5.x <- noise.x; r5.y <- noise.y

#line 16
  add r0.w, r5.y, r5.x
  mov r2.w, -r0.w
  max r0.w, r0.w, r2.w
  mul r4.z, r0.z, r0.w  // r4.z <- <rand_1_normal return value>

#line 27 "D:\就職作品\01\gameLib(ver 1.2)\Source\Shader\point_create_particle.hlsl"
  dp3 r0.z, r4.xyzx, r4.xyzx
  rsq r0.z, r0.z
  mul r4.xyz, r0.zzzz, r4.xyzx
  mul r4.xyz, r4.xyzx, cb1[0].wwww  // r4.x <- particle.velocity.x; r4.y <- particle.velocity.y; r4.z <- particle.velocity.z

#line 28
  nop 
  mov r0.z, l(159)
  udiv null, r0.z, r0.x, r0.z
  mov r0.w, l(621)
  udiv null, r0.w, r0.y, r0.w
  utof r5.x, r0.z
  utof r5.y, r0.w
  itof r0.z, l(1)

#line 15 "D:\就職作品\01\gameLib(ver 1.2)\Source\Shader\Lib\rand_function.hlsli"
  dp2 r0.w, r5.xyxx, r5.xyxx
  rsq r0.w, r0.w
  mul r5.xy, r0.wwww, r5.xyxx
  dp2 r0.w, r5.xyxx, l(0.163797, 0.986494, 0.000000, 0.000000)
  sincos r0.w, null, r0.w
  mul r0.w, r0.w, l(43758.546875)
  frc r5.xy, r0.wwww  // r5.y <- noise.x
  mov r5.xy, r5.xyxx  // r5.x <- noise.x; r5.y <- noise.y

#line 16
  add r0.w, r5.y, r5.x
  mov r2.w, -r0.w
  max r0.w, r0.w, r2.w
  mul r5.x, r0.z, r0.w  // r5.x <- <rand_1_normal return value>

#line 28 "D:\就職作品\01\gameLib(ver 1.2)\Source\Shader\point_create_particle.hlsl"
  nop 
  mov r0.z, l(765)
  udiv null, r0.z, r0.y, r0.z
  mov r0.w, l(437)
  udiv null, r0.x, r0.x, r0.w
  utof r6.x, r0.z
  utof r6.y, r0.x
  itof r0.x, l(1)

#line 20 "D:\就職作品\01\gameLib(ver 1.2)\Source\Shader\Lib\rand_function.hlsli"
  dp2 r0.z, r6.xyxx, r6.xyxx
  rsq r0.z, r0.z
  mul r0.zw, r0.zzzz, r6.xxxy
  dp2 r0.z, r0.zwzz, l(0.163797, 0.986494, 0.000000, 0.000000)
  sincos r0.z, null, r0.z
  mul r0.z, r0.z, l(43758.546875)
  frc r6.y, r0.z  // r6.y <- noiseX

#line 21
  itof r0.z, l(1)
  mul r0.w, r6.y, r6.y
  mov r0.w, -r0.w
  add r0.z, r0.w, r0.z
  sqrt r6.z, r0.z  // r6.z <- noiseY

#line 22
  mul r5.yz, r0.xxxx, r6.yyzy  // r5.y <- <rand_2_normal return value>.x; r5.z <- <rand_2_normal return value>.y

#line 28 "D:\就職作品\01\gameLib(ver 1.2)\Source\Shader\point_create_particle.hlsl"
  dp3 r0.x, r5.xyzx, r5.xyzx
  rsq r0.x, r0.x
  mul r0.xzw, r0.xxxx, r5.xxyz
  mul r0.xzw, r0.xxzw, cb1[3].xxxx  // r0.x <- particle.accel.x; r0.z <- particle.accel.y; r0.w <- particle.accel.z

#line 29
  mov r5.xyzw, cb1[1].xyzw  // r5.x <- particle.color.x; r5.y <- particle.color.y; r5.z <- particle.color.z; r5.w <- particle.color.w

#line 30
  mov r2.w, cb1[2].x  // r2.w <- particle.life

#line 32
  store_structured u0.x, r0.y, l(0), r3.x
  store_structured u0.x, r0.y, l(4), r3.y
  store_structured u0.x, r0.y, l(8), r3.z
  store_structured u0.x, r0.y, l(12), r1.x
  store_structured u0.x, r0.y, l(16), r1.y
  store_structured u0.x, r0.y, l(20), r1.z
  store_structured u0.x, r0.y, l(24), r1.w
  store_structured u0.x, r0.y, l(28), r2.x
  store_structured u0.x, r0.y, l(32), r2.y
  store_structured u0.x, r0.y, l(36), r4.x
  store_structured u0.x, r0.y, l(40), r4.y
  store_structured u0.x, r0.y, l(44), r4.z
  store_structured u0.x, r0.y, l(48), r5.x
  store_structured u0.x, r0.y, l(52), r5.y
  store_structured u0.x, r0.y, l(56), r5.z
  store_structured u0.x, r0.y, l(60), r5.w
  store_structured u0.x, r0.y, l(64), r0.x
  store_structured u0.x, r0.y, l(68), r0.z
  store_structured u0.x, r0.y, l(72), r0.w
  store_structured u0.x, r0.y, l(76), r2.w
  store_structured u0.x, r0.y, l(80), r2.z

#line 36
  imm_atomic_iadd r1.x, u5, l(0), l(1)  // r1.x <- particleCount

#line 37
  mov r0.x, l(4)
  imul null, r0.x, r0.x, r1.x
  store_raw u1.x, r0.x, r0.y

#line 38
endif 

#line 39
ret 
// Approximately 128 instruction slots used
