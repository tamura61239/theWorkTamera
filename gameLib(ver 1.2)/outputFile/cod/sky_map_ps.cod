//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbObj
// {
//
//   float4 materialColor;              // Offset:    0 Size:    16
//   row_major float4x4 world;          // Offset:   16 Size:    64 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// anisotropic_sampler_state         sampler      NA          NA             s0      1 
// cubemap                           texture  float4        cube             t0      1 
// CbObj                             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB1[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texturecube (float,float,float,float) t0
dcl_input_ps linear v1.xyz
dcl_output o0.xyzw
dcl_temps 1
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.texcoord.x; v1.y <- pin.texcoord.y; v1.z <- pin.texcoord.z; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 11 "D:\就職作品\01\gameLib(ver 1.2)\Source\Shader\Lib\sky_map_ps.hlsl"
sample_indexable(texturecube)(float,float,float,float) r0.xyz, v1.xyzx, t0.xyzw, s0
mul r0.xyz, r0.xyzx, cb1[0].xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z
mov r0.w, cb1[0].w  // r0.w <- color.w

#line 12
mov o0.xyzw, r0.xyzw
ret 
// Approximately 5 instruction slots used
