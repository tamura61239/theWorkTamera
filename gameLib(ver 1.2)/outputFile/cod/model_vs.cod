//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   row_major float4x4 view;           // Offset:    0 Size:    64
//   row_major float4x4 projection;     // Offset:   64 Size:    64
//
// }
//
// cbuffer CbMesh
// {
//
//   row_major float4x4 boneTransforms[128];// Offset:    0 Size:  8192
//   row_major float4x4 beforeBoneTransforms[128];// Offset: 8192 Size:  8192 [unused]
//
// }
//
// cbuffer CbSubset
// {
//
//   float4 materialColor;              // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CbScene                           cbuffer      NA          NA            cb0      1 
// CbMesh                            cbuffer      NA          NA            cb1      1 
// CbSubset                          cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// WEIGHTS                  0   xyzw        3     NONE   float   xyzw
// BONES                    0   xyzw        4     NONE    uint   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xy          4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000},
                              { -1, 0, 0, 0},
                              { 0, -1, 0, 0},
                              { 0, 0, -1, 0},
                              { 0, 0, 0, -1} }
dcl_constantbuffer CB0[8], immediateIndexed
dcl_constantbuffer CB1[512], dynamicIndexed
dcl_constantbuffer CB2[1], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xy
dcl_output o5.xyz
dcl_output o6.xyz
dcl_temps 7
//
// Initial variable locations:
//   v0.x <- position.x; v0.y <- position.y; v0.z <- position.z; v0.w <- position.w; 
//   v1.x <- normal.x; v1.y <- normal.y; v1.z <- normal.z; 
//   v2.x <- texcoord.x; v2.y <- texcoord.y; 
//   v3.x <- boneWeights.x; v3.y <- boneWeights.y; v3.z <- boneWeights.z; v3.w <- boneWeights.w; 
//   v4.x <- boneIndices.x; v4.y <- boneIndices.y; v4.z <- boneIndices.z; v4.w <- boneIndices.w; 
//   o6.x <- <main return value>.vB.x; o6.y <- <main return value>.vB.y; o6.z <- <main return value>.vB.z; 
//   o5.x <- <main return value>.vT.x; o5.y <- <main return value>.vT.y; o5.z <- <main return value>.vT.z; 
//   o4.x <- <main return value>.texcoord.x; o4.y <- <main return value>.texcoord.y; 
//   o3.x <- <main return value>.worldPosition.x; o3.y <- <main return value>.worldPosition.y; o3.z <- <main return value>.worldPosition.z; 
//   o2.x <- <main return value>.worldNormal.x; o2.y <- <main return value>.worldNormal.y; o2.z <- <main return value>.worldNormal.z; 
//   o1.x <- <main return value>.color.x; o1.y <- <main return value>.color.y; o1.z <- <main return value>.color.z; o1.w <- <main return value>.color.w; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 14 "D:\就職作品\01\gameLib(ver 1.2)\Source\Shader\Lib\model_vs.hlsl"
itof r0.xyz, l(0, 0, 0, 0)  // r0.x <- p.x; r0.y <- p.y; r0.z <- p.z

#line 15
itof r1.xyz, l(0, 0, 0, 0)  // r1.x <- n.x; r1.y <- n.y; r1.z <- n.z

#line 16
mov r0.w, l(0)  // r0.w <- i
mov r2.xyz, r1.zxyz  // r2.x <- n.z; r2.y <- n.x; r2.z <- n.y
mov r3.x, r0.x  // r3.x <- p.x
mov r3.y, r0.y  // r3.y <- p.y
mov r3.z, r0.z  // r3.z <- p.z
mov r1.w, r0.w  // r1.w <- i
loop 
  ilt r2.w, r1.w, l(4)
  breakc_z r2.w

#line 18
  dp4 r2.w, v3.xyzw, icb[r1.w + 0].xyzw
  and r4.xyzw, v4.xyzw, icb[r1.w + 4].xyzw
  or r4.xy, r4.ywyy, r4.xzxx
  or r3.w, r4.y, r4.x
  imul null, r3.w, r3.w, l(4)
  mul r4.xyz, v0.xxxx, cb1[r3.w + 0].xyzx
  mul r5.xyz, v0.yyyy, cb1[r3.w + 1].xyzx
  add r4.xyz, r4.xyzx, r5.xyzx
  mul r5.xyz, v0.zzzz, cb1[r3.w + 2].xyzx
  add r4.xyz, r4.xyzx, r5.xyzx
  mul r5.xyz, v0.wwww, cb1[r3.w + 3].xyzx
  add r4.xyz, r4.xyzx, r5.xyzx
  mul r4.xyz, r2.wwww, r4.xyzx
  add r3.xyz, r4.xyzx, r3.xyzx

#line 19
  dp4 r2.w, v3.xyzw, icb[r1.w + 0].xyzw
  and r4.xyzw, v4.xyzw, icb[r1.w + 4].xyzw
  or r4.xy, r4.ywyy, r4.xzxx
  or r3.w, r4.y, r4.x
  imul null, r3.w, r3.w, l(4)
  mul r4.xyz, v1.xxxx, cb1[r3.w + 0].xyzx
  mul r5.xyz, v1.yyyy, cb1[r3.w + 1].xyzx
  add r4.xyz, r4.xyzx, r5.xyzx
  mul r5.xyz, v1.zzzz, cb1[r3.w + 2].xyzx
  add r4.xyz, r4.xyzx, r5.xyzx
  mul r4.xyz, r2.wwww, r4.xyzx
  add r2.xyz, r2.xyzx, r4.zxyz

#line 20
  iadd r1.w, r1.w, l(1)
endloop 

#line 23
mov r3.x, r3.x  // r3.x <- vout.worldPosition.x
mov r3.y, r3.y  // r3.y <- vout.worldPosition.y
mov r3.z, r3.z  // r3.z <- vout.worldPosition.z

#line 24
mul r0.xyzw, cb0[0].xxxx, cb0[4].xyzw
mul r1.xyzw, cb0[0].yyyy, cb0[5].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, cb0[0].zzzz, cb0[6].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, cb0[0].wwww, cb0[7].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, cb0[1].xxxx, cb0[4].xyzw
mul r4.xyzw, cb0[1].yyyy, cb0[5].xyzw
add r1.xyzw, r1.xyzw, r4.xyzw
mul r4.xyzw, cb0[1].zzzz, cb0[6].xyzw
add r1.xyzw, r1.xyzw, r4.xyzw
mul r4.xyzw, cb0[1].wwww, cb0[7].xyzw
add r1.xyzw, r1.xyzw, r4.xyzw
mul r4.xyzw, cb0[2].xxxx, cb0[4].xyzw
mul r5.xyzw, cb0[2].yyyy, cb0[5].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb0[2].zzzz, cb0[6].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb0[2].wwww, cb0[7].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb0[3].xxxx, cb0[4].xyzw
mul r6.xyzw, cb0[3].yyyy, cb0[5].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, cb0[3].zzzz, cb0[6].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, cb0[3].wwww, cb0[7].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r0.xyzw, r0.xyzw, r3.xxxx
mul r1.xyzw, r1.xyzw, r3.yyyy
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, r3.zzzz, r4.xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, r5.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- vout.position.x; r0.y <- vout.position.y; r0.z <- vout.position.z; r0.w <- vout.position.w

#line 26
dp3 r1.x, r2.xyzx, r2.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, r2.yzxy  // r1.x <- N.x; r1.y <- N.y; r1.z <- N.z

#line 27
mov r1.xyz, r1.xyzx  // r1.x <- vout.worldNormal.x; r1.y <- vout.worldNormal.y; r1.z <- vout.worldNormal.z

#line 28
mov r2.xyz, l(1.000000,-0.001000,0,0)  // r2.x <- vB.y; r2.y <- vB.z; r2.z <- vB.x

#line 29
mul r4.xyz, r1.yzxy, r2.yzxy
mul r2.xyz, r1.zxyz, r2.xyzx
mov r2.xyz, -r2.xyzx
add r2.xyz, r2.xyzx, r4.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx  // r2.x <- vT.x; r2.y <- vT.y; r2.z <- vT.z

#line 30
mul r4.xyz, r1.yzxy, r2.zxyz
mul r5.xyz, r1.zxyz, r2.yzxy
mov r5.xyz, -r5.xyzx
add r4.xyz, r4.xyzx, r5.xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r4.xyzx  // r4.x <- vB.x; r4.y <- vB.y; r4.z <- vB.z

#line 31
mov r2.xyz, r2.xyzx  // r2.x <- vout.vT.x; r2.y <- vout.vT.y; r2.z <- vout.vT.z

#line 32
mov r4.xyz, r4.xyzx  // r4.x <- vout.vB.x; r4.y <- vout.vB.y; r4.z <- vout.vB.z

#line 33
mov r5.xy, v2.xyxx  // r5.x <- vout.texcoord.x; r5.y <- vout.texcoord.y

#line 34
mov r6.xyzw, cb2[0].xyzw  // r6.x <- vout.color.x; r6.y <- vout.color.y; r6.z <- vout.color.z; r6.w <- vout.color.w

#line 36
mov o0.xyzw, r0.xyzw
mov o1.xyzw, r6.xyzw
mov o2.xyz, r1.xyzx
mov o3.xyz, r3.xyzx
mov o5.xyz, r2.xyzx
mov o6.xyz, r4.xyzx
mov o4.xy, r5.xyxx
ret 
// Approximately 108 instruction slots used
