//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// diffuse_map_sampler_state         sampler      NA          NA             s0      1 
// diffuse_map                       texture  float4          2d             t0      1 
// velocity_map                      texture  float4          2d             t1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 6
//
// Initial variable locations:
//   v0.x <- pin.pos.x; v0.y <- pin.pos.y; v0.z <- pin.pos.z; v0.w <- pin.pos.w; 
//   v1.x <- pin.color.x; v1.y <- pin.color.y; v1.z <- pin.color.z; v1.w <- pin.color.w; 
//   v2.x <- pin.texcoord.x; v2.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 18 "D:\就職作品\01\gameLib(ver 1.2)\Source\Shader\Lib\motion_blur_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xy, v2.xyxx, t1.xyzw, s0
mov r0.xy, r0.xyxx  // r0.x <- velocityMap.x; r0.y <- velocityMap.y

#line 19
mov r0.xy, r0.xyxx  // r0.x <- velocity.x; r0.y <- velocity.y

#line 22
nop 
mov r0.xy, r0.xyxx

#line 11
dp2 r1.x, r0.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)  // r1.x <- s.x
dp2 r1.y, r0.xyxx, l(269.500000, 183.300003, 0.000000, 0.000000)  // r1.y <- s.y

#line 12
sincos r0.zw, null, r1.xxxy
mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 43758.546875, 43758.546875)
frc r0.zw, r0.zzzw  // r0.z <- <rand2 return value>.x; r0.w <- <rand2 return value>.y

#line 22
mov r1.xy, l(-0.500000,-0.500000,-0.000000,-0.000000)
add r0.zw, r0.zzzw, r1.xxxy
mov r0.zw, -r0.zzzw
add r0.zw, r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)  // r0.z <- jitter.x; r0.w <- jitter.y

#line 25
itof r1.xyzw, l(0, 0, 0, 0)  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z; r1.w <- color.w

#line 26
mov r2.x, l(4)  // r2.x <- loop

#line 28
ineg r2.y, r2.x  // r2.y <- ii
mov r3.xyz, r1.xyzx  // r3.x <- color.x; r3.y <- color.y; r3.z <- color.z
mov r3.w, r1.w  // r3.w <- color.w
mov r2.z, r2.y  // r2.z <- ii
loop 
  ige r2.w, r2.x, r2.z
  breakc_z r2.w

#line 30
  itof r4.xy, r2.zzzz
  mul r4.zw, r0.zzzw, r0.xxxy
  itof r5.xy, l(8, 8, 0, 0)
  div r4.zw, r4.zzzw, r5.xxxy
  mul r4.xy, r4.zwzz, r4.xyxx
  add r4.xy, r4.xyxx, v2.xyxx  // r4.x <- uv.x; r4.y <- uv.y

#line 31
  sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.xyxx, t0.xyzw, s0
  add r3.xyzw, r4.xyzw, r3.xyzw

#line 32
  iadd r2.z, r2.z, l(1)
endloop 

#line 33
div r0.xyz, r3.xyzx, r3.wwww  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 35
mov o0.xyz, r0.xyzx
mov o0.w, r3.w
ret 
// Approximately 37 instruction slots used
