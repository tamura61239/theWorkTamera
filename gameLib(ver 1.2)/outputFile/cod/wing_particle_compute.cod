//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer ConstanceWing
// {
//
//   struct WingEndPoint
//   {
//       
//       float4 position;               // Offset:    0
//       float4 color;                  // Offset:   16
//       float4 size;                   // Offset:   32
//
//   } wingEndPoint[4];                 // Offset:    0 Size:   192
//   float3 centerPosition;             // Offset:  192 Size:    12
//   float startIndex;                  // Offset:  204 Size:     4
//   float indexSize;                   // Offset:  208 Size:     4
//   float3 dummy;                      // Offset:  212 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// rwbParticle                           UAV    byte         r/w             u0      1 
// resetParticle                         UAV    byte         r/w             u1      1 
// ConstanceWing                     cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[14], dynamicIndexed
dcl_uav_raw u0
dcl_uav_raw u1
dcl_input vThreadID.xyz
dcl_temps 9
dcl_thread_group 100, 1, 1
//
// Initial variable locations:
//   vThreadID.x <- DTid.x; vThreadID.y <- DTid.y; vThreadID.z <- DTid.z
//
#line 23 "D:\就職作品\01\gameLib(ver 1.2)\Source\Shader\wing_particle_compute.hlsl"
mov r0.x, l(100)
imul null, r0.x, r0.x, vThreadID.z
mov r0.y, l(1)
imul null, r0.x, r0.y, r0.x
mov r0.y, l(100)
imul null, r0.y, r0.y, vThreadID.y
iadd r0.x, r0.y, r0.x
iadd r0.x, r0.x, vThreadID.x  // r0.x <- index

#line 24
mov r0.y, l(48)
imul null, r0.y, r0.y, r0.x  // r0.y <- bufferIndex

#line 25
mov r0.z, l(24)
imul null, r0.z, r0.z, r0.x  // r0.z <- resetBufferIndex

#line 27
mov r0.w, l(0)
iadd r0.w, r0.w, r0.y
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r1.xyzw, r0.w, u0.xyzw
mov r1.xyzw, r1.xyzw  // r1.x <- position.x; r1.y <- position.y; r1.z <- position.z; r1.w <- position.w

#line 28
mov r0.w, l(16)
iadd r0.w, r0.w, r0.y
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r2.xyzw, r0.w, u0.xyzw
mov r2.xyzw, r2.xyzw  // r2.x <- color.x; r2.y <- color.y; r2.z <- color.z; r2.w <- color.w

#line 29
mov r0.w, l(32)
iadd r0.w, r0.w, r0.y
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r3.xyz, r0.w, u0.xyzx
mov r3.xyz, r3.xyzx  // r3.x <- velocity.x; r3.y <- velocity.y; r3.z <- velocity.z

#line 30
mov r0.w, l(44)
iadd r0.w, r0.w, r0.y
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r0.w, r0.w, u0.xxxx  // r0.w <- wingCount

#line 32
mov r3.w, l(0)
iadd r3.w, r0.z, r3.w
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r3.w, r3.w, u1.xxxx
mov r3.w, r3.w  // r3.w <- startWingCount

#line 33
mov r4.x, l(4)
iadd r4.x, r0.z, r4.x
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r4.x, r4.x, u1.xxxx
mov r4.x, r4.x  // r4.x <- startLength

#line 34
mov r4.y, l(8)
iadd r0.z, r0.z, r4.y
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r4.yzw, r0.z, u1.xxyz  // r4.y <- startRangePosition.x; r4.z <- startRangePosition.y; r4.w <- startRangePosition.z

#line 36
itof r0.z, l(2)
ge r0.z, r3.w, r0.z
movc r0.z, r0.z, l(1.000000), l(0)  // r0.z <- startCount

#line 37
itof r5.xyz, l(0, 0, 0, 0)
itof r5.w, l(2)
mov r5.w, -r5.w
add r5.w, r3.w, r5.w
ftou r5.w, r5.w
imul null, r5.w, r5.w, l(3)
mov r6.xyz, -r5.xyzx
add r6.xyz, r6.xyzx, cb0[r5.w + 2].xyzx
mul r6.xyz, r0.zzzz, r6.xyzx
add r5.xyz, r5.xyzx, r6.xyzx  // r5.x <- startMinSize.x; r5.y <- startMinSize.y; r5.z <- startMinSize.z

#line 38
ftou r5.w, r3.w
imul null, r5.w, r5.w, l(3)
mov r6.xyz, -r5.xyzx
add r6.xyz, r6.xyzx, cb0[r5.w + 2].xyzx
mul r6.xyz, r4.xxxx, r6.xyzx
add r5.xyz, r5.xyzx, r6.xyzx  // r5.x <- startSize.x; r5.y <- startSize.y; r5.z <- startSize.z

#line 39
itof r5.w, l(2)
mov r5.w, -r5.w
add r5.w, r3.w, r5.w
ftou r5.w, r5.w
imul null, r5.w, r5.w, l(3)
mov r6.xyz, -cb0[12].xyzx
add r6.xyz, r6.xyzx, cb0[r5.w + 0].xyzx
mul r6.xyz, r0.zzzz, r6.xyzx
add r6.xyz, r6.xyzx, cb0[12].xyzx  // r6.x <- startMinPosition.x; r6.y <- startMinPosition.y; r6.z <- startMinPosition.z

#line 40
ftou r5.w, r3.w
imul null, r5.w, r5.w, l(3)
mov r7.xyz, cb0[r5.w + 0].xyzx  // r7.x <- startMaxPosition.x; r7.y <- startMaxPosition.y; r7.z <- startMaxPosition.z

#line 41
mov r8.xyz, -r6.xyzx
add r8.xyz, r7.xyzx, r8.xyzx
dp3 r5.w, r8.xyzx, r8.xyzx
sqrt r5.w, r5.w  // r5.w <- wingLeng

#line 42
ftou r6.w, r3.w
imul null, r6.w, r6.w, l(3)
mov r8.xyz, -r7.xyzx
add r8.xyz, r6.xyzx, r8.xyzx
dp3 r7.w, r8.xyzx, r8.xyzx
rsq r7.w, r7.w
mul r8.xyz, r7.wwww, r8.xyzx
itof r7.w, l(0)
mul r8.xyz, r4.xxxx, r8.xyzx
mul r8.w, r4.x, r7.w
mul r8.xyzw, r5.wwww, r8.xyzw
add r8.xyzw, r8.xyzw, cb0[r6.w + 0].xyzw
mul r4.xyz, r4.yzwy, r5.xyzx
itof r4.w, l(0)
add r4.xyzw, r4.xyzw, r8.xyzw  // r4.x <- startPosition.x; r4.y <- startPosition.y; r4.z <- startPosition.z; r4.w <- startPosition.w

#line 43
mov r5.xyz, -r4.xyzx
add r5.xyz, r5.xyzx, r6.xyzx
dp3 r5.x, r5.xyzx, r5.xyzx
sqrt r5.x, r5.x
mov r5.yzw, -r4.xxyz
add r5.yzw, r5.yyzw, r7.xxyz
dp3 r5.y, r5.yzwy, r5.yzwy
sqrt r5.y, r5.y
mov r5.z, -r5.x
add r5.y, r5.z, r5.y
mul r0.z, r0.z, r5.y
add r0.z, r0.z, r5.x  // r0.z <- maxLength

#line 46
utof r5.x, r0.x
ge r5.x, r5.x, cb0[12].w
movc r5.x, r5.x, l(1.000000), l(0)
add r5.y, cb0[12].w, cb0[13].x
utof r0.x, r0.x
ge r0.x, r0.x, r5.y
movc r0.x, r0.x, l(1.000000), l(0)
mov r0.x, -r0.x
add r0.x, r0.x, r5.x
itof r5.x, l(0)
max r0.x, r0.x, r5.x  // r0.x <- start

#line 47
mov r5.xyzw, -r1.xyzw
add r5.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, r0.xxxx, r5.xyzw
add r1.xyzw, r1.xyzw, r5.xyzw

#line 48
itof r5.xyzw, l(1, 1, 1, 1)
mov r6.xyzw, -r2.xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r5.xyzw, r0.xxxx, r5.xyzw
add r2.xyzw, r2.xyzw, r5.xyzw

#line 49
mov r5.x, -r0.w
add r5.x, r3.w, r5.x
mul r5.x, r0.x, r5.x
add r0.w, r0.w, r5.x

#line 50
itof r5.xyz, l(0, 0, -1, 0)
mov r6.xyz, -r3.xyzx
add r5.xyz, r5.xyzx, r6.xyzx
mul r5.xyz, r0.xxxx, r5.xyzx
add r3.xyz, r3.xyzx, r5.xyzx

#line 52
mul r5.xyz, r3.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
add r1.xyz, r1.xyzx, r5.xyzx

#line 56
mov r0.x, -r1.z
add r0.x, r0.x, r4.z
ge r0.x, r0.x, r0.z
movc r0.x, r0.x, l(1.000000), l(0)  // r0.x <- reset

#line 57
mov r5.xyzw, -r1.xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r4.xyzw, r0.xxxx, r4.xyzw
add r1.xyzw, r1.xyzw, r4.xyzw

#line 58
itof r4.xyzw, l(1, 1, 1, 1)
mov r5.xyzw, -r2.xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r4.xyzw, r0.xxxx, r4.xyzw
add r2.xyzw, r2.xyzw, r4.xyzw

#line 59
mov r0.z, -r0.w
add r0.z, r0.z, r3.w
mul r0.z, r0.z, r0.x
add r0.z, r0.z, r0.w  // r0.z <- wingCount

#line 60
itof r4.xyz, l(0, 0, -1, 0)
mov r5.xyz, -r3.xyzx
add r4.xyz, r4.xyzx, r5.xyzx
mul r4.xyz, r0.xxxx, r4.xyzx
add r3.xyz, r3.xyzx, r4.xyzx

#line 96
mov r0.x, l(0)
iadd r0.x, r0.x, r0.y
store_raw u0.xyzw, r0.x, r1.xyzw

#line 97
mov r0.x, l(16)
iadd r0.x, r0.x, r0.y
store_raw u0.xyzw, r0.x, r2.xyzw

#line 98
mov r0.x, l(32)
iadd r0.x, r0.x, r0.y
store_raw u0.xyz, r0.x, r3.xyzx

#line 99
mov r0.x, l(44)
iadd r0.x, r0.x, r0.y
store_raw u0.x, r0.x, r0.z

#line 100
ret 
// Approximately 166 instruction slots used
