//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbZoom
// {
//
//   float blurLength;                  // Offset:    0 Size:     4
//   int division;                      // Offset:    4 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// diffuse_map_sampler_state         sampler      NA          NA             s0      1 
// diffuse_map                       texture  float4          2d             t0      1 
// CbZoom                            cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 5
//
// Initial variable locations:
//   v0.x <- pin.pos.x; v0.y <- pin.pos.y; v0.z <- pin.pos.z; v0.w <- pin.pos.w; 
//   v1.x <- pin.color.x; v1.y <- pin.color.y; v1.z <- pin.color.z; v1.w <- pin.color.w; 
//   v2.x <- pin.texcoord.x; v2.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 12 "D:\就職作品\01\gameLib(ver 1.2)\Source\Shader\Lib\zoom_blur_ps.hlsl"
mov r0.xy, l(0.500000,0.500000,0,0)  // r0.x <- center.x; r0.y <- center.y

#line 13
mov r0.xy, -r0.xyxx
add r0.xy, r0.xyxx, v2.xyxx  // r0.x <- vec.x; r0.y <- vec.y

#line 14
itof r1.xyz, l(0, 0, 0, 0)  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z

#line 15
nop 
mov r0.xy, r0.xyxx
mov r0.z, l(0.500000)

#line 15 "D:\就職作品\01\gameLib(ver 1.2)\Source\Shader\Lib\rand_function.hlsli"
dp2 r0.w, r0.xyxx, r0.xyxx
rsq r0.w, r0.w
mul r2.xy, r0.wwww, r0.xyxx
dp2 r0.w, r2.xyxx, l(0.163797, 0.986494, 0.000000, 0.000000)
sincos r0.w, null, r0.w
mul r0.w, r0.w, l(43758.546875)
frc r2.xy, r0.wwww  // r2.x <- noise.x; r2.y <- noise.y

#line 16
add r0.w, r2.y, r2.x
mov r1.w, -r0.w
max r0.w, r0.w, r1.w
mul r0.z, r0.z, r0.w  // r0.z <- <rand_1_normal return value>

#line 15 "D:\就職作品\01\gameLib(ver 1.2)\Source\Shader\Lib\zoom_blur_ps.hlsl"
mov r0.z, r0.z  // r0.z <- rand

#line 16
itof r0.w, l(0)  // r0.w <- total

#line 17
itof r1.w, cb0[0].y
div r1.w, l(1.000000), r1.w  // r1.w <- nFrag

#line 18
mov r2.x, l(0)  // r2.x <- i
mov r2.yzw, r1.xxyz  // r2.y <- color.x; r2.z <- color.y; r2.w <- color.z
mov r3.x, r0.w  // r3.x <- total
mov r3.y, r2.x  // r3.y <- i
loop 
  ilt r3.z, r3.y, cb0[0].y
  breakc_z r3.z

#line 20
  itof r3.z, r3.y
  add r3.z, r0.z, r3.z
  mul r3.z, r1.w, r3.z  // r3.z <- percent

#line 21
  mul r3.w, r3.z, r3.z
  mov r3.w, -r3.w
  add r3.w, r3.w, r3.z  // r3.w <- weight

#line 23
  mul r4.xy, r0.xyxx, r3.zzzz
  mul r4.xy, r4.xyxx, cb0[0].xxxx
  mul r4.xy, r1.wwww, r4.xyxx
  mov r4.xy, -r4.xyxx
  add r4.xy, r4.xyxx, v2.xyxx  // r4.x <- uv.x; r4.y <- uv.y

#line 24
  add r3.x, r3.w, r3.x

#line 25
  sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t0.xyzw, s0
  mul r4.xyz, r4.xyzx, v1.xyzx
  mul r4.xyz, r3.wwww, r4.xyzx
  add r2.yzw, r2.yyzw, r4.xxyz

#line 26
  iadd r3.y, r3.y, l(1)
endloop 

#line 27
mov r0.x, l(1.000000)  // r0.x <- color.w

#line 28
div r0.yzw, r2.yyzw, r3.xxxx  // r0.y <- color.x; r0.z <- color.y; r0.w <- color.z

#line 29
mov o0.xyz, r0.yzwy
mov o0.w, r0.x
ret 
// Approximately 52 instruction slots used
