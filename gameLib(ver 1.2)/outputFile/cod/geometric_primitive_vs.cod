//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   float4 lightDirection;             // Offset:    0 Size:    16
//   row_major float4x4 view;           // Offset:   16 Size:    64
//   row_major float4x4 projection;     // Offset:   80 Size:    64
//
// }
//
// cbuffer CbObj
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64
//   float4 materialColor;              // Offset:   64 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CbScene                           cbuffer      NA          NA            cb0      1 
// CbObj                             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[9], immediateIndexed
dcl_constantbuffer CB1[5], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_temps 3
//
// Initial variable locations:
//   v0.x <- pos.x; v0.y <- pos.y; v0.z <- pos.z; v0.w <- pos.w; 
//   v1.x <- normal.x; v1.y <- normal.y; v1.z <- normal.z; 
//   o1.x <- <main return value>.color.x; o1.y <- <main return value>.color.y; o1.z <- <main return value>.color.z; o1.w <- <main return value>.color.w; 
//   o0.x <- <main return value>.pos.x; o0.y <- <main return value>.pos.y; o0.z <- <main return value>.pos.z; o0.w <- <main return value>.pos.w
//
#line 18 "D:\就職作品\01\gameLib(ver 1.2)\Source\Shader\Lib\geometric_primitive_vs.hlsl"
mul r0.xyzw, v0.xxxx, cb1[0].xyzw
mul r1.xyzw, v0.yyyy, cb1[1].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, v0.zzzz, cb1[2].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, v0.wwww, cb1[3].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- vout.pos.x; r0.y <- vout.pos.y; r0.z <- vout.pos.z; r0.w <- vout.pos.w

#line 19
mul r1.xyzw, r0.xxxx, cb0[1].xyzw
mul r2.xyzw, r0.yyyy, cb0[2].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, r0.zzzz, cb0[3].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r0.xyzw, r0.wwww, cb0[4].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- vout.pos.x; r0.y <- vout.pos.y; r0.z <- vout.pos.z; r0.w <- vout.pos.w

#line 20
mul r1.xyzw, r0.xxxx, cb0[5].xyzw
mul r2.xyzw, r0.yyyy, cb0[6].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, r0.zzzz, cb0[7].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r0.xyzw, r0.wwww, cb0[8].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- vout.pos.x; r0.y <- vout.pos.y; r0.z <- vout.pos.z; r0.w <- vout.pos.w

#line 21
mul r1.xyz, v1.xxxx, cb1[0].xyzx
mul r2.xyz, v1.yyyy, cb1[1].xyzx
add r1.xyz, r1.xyzx, r2.xyzx
mul r2.xyz, v1.zzzz, cb1[2].xyzx
add r1.xyz, r1.xyzx, r2.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx  // r1.x <- N.x; r1.y <- N.y; r1.z <- N.z

#line 22
mov r2.xyz, -cb0[0].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx  // r2.x <- L.x; r2.y <- L.y; r2.z <- L.z

#line 23
dp3 r1.x, r2.xyzx, r1.xyzx  // r1.x <- d

#line 24
itof r1.y, l(0)
max r1.x, r1.x, r1.y
mul r1.xyz, r1.xxxx, cb1[4].xyzx  // r1.x <- vout.color.x; r1.y <- vout.color.y; r1.z <- vout.color.z

#line 25
mov r1.w, cb1[4].w  // r1.w <- vout.color.w

#line 28
mov o0.xyzw, r0.xyzw
mov o1.xyz, r1.xyzx
mov o1.w, r1.w
ret 
// Approximately 42 instruction slots used
