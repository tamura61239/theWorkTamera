//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbCreate
// {
//
//   float3 color;                      // Offset:    0 Size:    12
//   int startIndex;                    // Offset:   12 Size:     4
//   row_major float4x4 world;          // Offset:   16 Size:    64
//
// }
//
// Resource bind info for vertexBuffer
// {
//
//   struct Vertex
//   {
//       
//       float3 position;               // Offset:    0
//       float3 normal;                 // Offset:   12
//       float2 texcoord;               // Offset:   24
//
//   } $Element;                        // Offset:    0 Size:    32
//
// }
//
// Resource bind info for indexBuffer
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for particleBuffer
// {
//
//   struct Particle
//   {
//       
//       float3 position;               // Offset:    0
//       float3 velocity;               // Offset:   12
//       float4 color;                  // Offset:   24
//       float life;                    // Offset:   40
//       float scale;                   // Offset:   44
//
//   } $Element;                        // Offset:    0 Size:    48
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// vertexBuffer                      texture  struct         r/o             t0      1 
// indexBuffer                       texture  struct         r/o             t1      1 
// particleBuffer                        UAV  struct         r/w             u0      1 
// CbCreate                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[5], immediateIndexed
dcl_resource_structured t0, 32
dcl_resource_structured t1, 4
dcl_uav_structured u0, 48
dcl_input vThreadID.x
dcl_temps 5
dcl_thread_group 1, 1, 1
//
// Initial variable locations:
//   vThreadID.x <- DTid.x; vThreadID.y <- DTid.y; vThreadID.z <- DTid.z
//
#line 7 "D:\就職作品\01\gameLib(ver 1.2)\Source\Shader\gpu_static_mesh_create_particle_cs.hlsl"
itof r0.xyz, l(0, 0, 0, 0)  // r0.x <- position.x; r0.y <- position.y; r0.z <- position.z

#line 8
itof r1.xyz, l(0, 0, 0, 0)  // r1.x <- normal.x; r1.y <- normal.y; r1.z <- normal.z

#line 9
mov r0.w, l(0)  // r0.w <- i
mov r2.xyz, r0.xyzx  // r2.x <- position.x; r2.y <- position.y; r2.z <- position.z
mov r3.xyz, r1.xyzx  // r3.x <- normal.x; r3.y <- normal.y; r3.z <- normal.z
mov r1.w, r0.w  // r1.w <- i
loop 
  ilt r2.w, r1.w, l(3)
  breakc_z r2.w

#line 11
  mov r2.w, l(3)
  imul null, r2.w, r2.w, vThreadID.x
  mov r3.w, l(1)
  iadd r2.w, r2.w, r3.w
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r2.w, r2.w, l(0), t1.xxxx
  ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r4.x, r2.w, l(0), t0.xxxx
  ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r4.y, r2.w, l(4), t0.xxxx
  ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r4.z, r2.w, l(8), t0.xxxx
  add r2.xyz, r2.xyzx, r4.xyzx

#line 12
  mov r2.w, l(3)
  imul null, r2.w, r2.w, vThreadID.x
  mov r3.w, l(1)
  iadd r2.w, r2.w, r3.w
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r2.w, r2.w, l(0), t1.xxxx
  ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r4.x, r2.w, l(12), t0.xxxx
  ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r4.y, r2.w, l(16), t0.xxxx
  ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r4.z, r2.w, l(20), t0.xxxx
  add r3.xyz, r3.xyzx, r4.xyzx

#line 14
  iadd r1.w, r1.w, l(1)
endloop 

#line 15
itof r0.xyz, l(3, 3, 3, 0)
div r0.xyz, r2.xyzx, r0.xyzx  // r0.x <- position.x; r0.y <- position.y; r0.z <- position.z

#line 16
itof r1.xyz, l(3, 3, 3, 0)
div r1.xyz, r3.xyzx, r1.xyzx  // r1.x <- normal.x; r1.y <- normal.y; r1.z <- normal.z

#line 18
itof r0.w, l(1)
mul r2.xyz, r0.xxxx, cb0[1].xyzx
mul r3.xyz, r0.yyyy, cb0[2].xyzx
add r2.xyz, r2.xyzx, r3.xyzx
mul r0.xyz, r0.zzzz, cb0[3].xyzx
add r0.xyz, r0.xyzx, r2.xyzx
mul r2.xyz, r0.wwww, cb0[4].xyzx
add r0.xyz, r0.xyzx, r2.xyzx  // r0.x <- p.position.x; r0.y <- p.position.y; r0.z <- p.position.z

#line 19
mov r0.w, l(0.100000)  // r0.w <- p.scale

#line 20
itof r1.w, l(1)  // r1.w <- p.color.w
mov r2.xyz, cb0[0].xyzx  // r2.x <- p.color.x; r2.y <- p.color.y; r2.z <- p.color.z

#line 21
itof r2.w, l(1)  // r2.w <- p.life

#line 22
mul r1.xyz, r1.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)  // r1.x <- p.velocity.x; r1.y <- p.velocity.y; r1.z <- p.velocity.z

#line 23
mov r3.x, cb0[0].w
iadd r3.x, r3.x, vThreadID.x
store_structured u0.x, r3.x, l(0), r0.x
store_structured u0.x, r3.x, l(4), r0.y
store_structured u0.x, r3.x, l(8), r0.z
store_structured u0.x, r3.x, l(12), r1.x
store_structured u0.x, r3.x, l(16), r1.y
store_structured u0.x, r3.x, l(20), r1.z
store_structured u0.x, r3.x, l(24), r2.x
store_structured u0.x, r3.x, l(28), r2.y
store_structured u0.x, r3.x, l(32), r2.z
store_structured u0.x, r3.x, l(36), r1.w
store_structured u0.x, r3.x, l(40), r2.w
store_structured u0.x, r3.x, l(44), r0.w

#line 25
ret 
// Approximately 61 instruction slots used
