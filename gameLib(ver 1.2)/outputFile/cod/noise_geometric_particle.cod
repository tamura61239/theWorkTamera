//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbMoveDataBuffer
// {
//
//   float3 standardVelocity;           // Offset:    0 Size:    12
//   float dummy2;                      // Offset:   12 Size:     4 [unused]
//   float3 angleSpeed;                 // Offset:   16 Size:    12
//   float dummy3;                      // Offset:   28 Size:     4 [unused]
//   float3 startPosition;              // Offset:   32 Size:    12
//   float dummy4;                      // Offset:   44 Size:     4 [unused]
//
// }
//
// cbuffer CbStartBuffer
// {
//
//   float startIndex;                  // Offset:    0 Size:     4
//   float indexSize;                   // Offset:    4 Size:     4
//   float setLife;                     // Offset:    8 Size:     4
//   float timer;                       // Offset:   12 Size:     4
//   float4 startColor;                 // Offset:   16 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// rwBuffer                              UAV    byte         r/w             u0      1 
// CbMoveDataBuffer                  cbuffer      NA          NA            cb0      1 
// CbStartBuffer                     cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[3], immediateIndexed
dcl_constantbuffer CB1[2], immediateIndexed
dcl_uav_raw u0
dcl_input vThreadID.xyz
dcl_temps 18
dcl_thread_group 100, 1, 1
//
// Initial variable locations:
//   vThreadID.x <- DTid.x; vThreadID.y <- DTid.y; vThreadID.z <- DTid.z
//
#line 31 "D:\就職作品\01\gameLib(ver 1.2)\Source\Shader\noise_geometric_particle.hlsl"
iadd r0.x, vThreadID.y, vThreadID.z
iadd r0.x, r0.x, vThreadID.x  // r0.x <- index

#line 32
mov r0.y, l(64)
imul null, r0.y, r0.y, r0.x  // r0.y <- bufferIndex

#line 34
mov r0.z, l(0)
iadd r0.z, r0.z, r0.y
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r1.xyzw, r0.z, u0.xyzw
mov r1.xyzw, r1.xyzw  // r1.x <- position.x; r1.y <- position.y; r1.z <- position.z; r1.w <- position.w

#line 35
mov r0.z, l(16)
iadd r0.z, r0.z, r0.y
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r2.xyzw, r0.z, u0.xyzw
mov r2.xyzw, r2.xyzw  // r2.x <- color.x; r2.y <- color.y; r2.z <- color.z; r2.w <- color.w

#line 36
mov r0.z, l(32)
iadd r0.z, r0.z, r0.y
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r3.xyz, r0.z, u0.xyzx
mov r3.xyz, r3.xyzx  // r3.x <- angle.x; r3.y <- angle.y; r3.z <- angle.z

#line 37
mov r0.z, l(44)
iadd r0.z, r0.z, r0.y
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r4.xyz, r0.z, u0.xyzx
mov r4.xyz, r4.xyzx  // r4.x <- velocity.x; r4.y <- velocity.y; r4.z <- velocity.z

#line 38
mov r0.z, l(56)
iadd r0.z, r0.z, r0.y
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r0.z, r0.z, u0.xxxx
mov r0.z, r0.z  // r0.z <- life

#line 39
mov r0.w, l(60)
iadd r0.w, r0.w, r0.y
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r0.w, r0.w, u0.xxxx
mov r0.w, r0.w  // r0.w <- maxLife

#line 42
utof r3.w, r0.x
ge r3.w, r3.w, cb1[0].x
if_nz r3.w

#line 44
  utof r3.w, r0.x
  add r4.w, cb1[0].y, cb1[0].x
  lt r3.w, r3.w, r4.w
  ge r4.w, r0.z, r0.w
  and r3.w, r3.w, r4.w
  if_nz r3.w

#line 46
    nop 
    mov r0.x, r0.x

#line 22
    mov r3.w, l(360)
    udiv null, r0.x, r0.x, r3.w
    utof r0.x, r0.x  // r0.x <- angle

#line 23
    sincos r5.x, null, r0.x  // r5.x <- x

#line 24
    sincos null, r5.z, r0.x  // r5.z <- z

#line 25
    mul r5.y, r5.z, r5.x  // r5.y <- y

#line 26
    add r1.xyz, r5.xyzx, cb0[2].xyzx  // r1.x <- <SetPosition return value>.x; r1.y <- <SetPosition return value>.y; r1.z <- <SetPosition return value>.z

#line 46
    mov r1.xyz, r1.xyzx  // r1.x <- position.x; r1.y <- position.y; r1.z <- position.z

#line 47
    itof r1.w, l(1)

#line 48
    mov r5.xyz, -cb0[2].xyzx
    add r5.xyz, r1.xyzx, r5.xyzx
    dp3 r0.x, r5.xyzx, r5.xyzx
    rsq r0.x, r0.x
    mul r5.xyz, r0.xxxx, r5.xyzx
    mul r4.xyz, r5.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)

#line 49
    mov r2.xyzw, cb1[1].xyzw

#line 50
    itof r0.z, l(0)

#line 51
    mov r0.w, cb1[0].z

#line 52
    itof r3.xyz, l(0, 0, 0, 0)

#line 53
  endif 

#line 54
endif 

#line 56
add r0.x, r0.z, cb1[0].w  // r0.x <- life

#line 57
ge r0.z, r0.x, r0.w
movc r0.z, r0.z, l(1.000000), l(0)  // r0.z <- dstroy

#line 59
nop 
mov r5.xyz, -cb0[2].xyzx
add r5.xyz, r1.xyzx, r5.xyzx

#line 62 "D:\就職作品\01\gameLib(ver 1.2)\Source\Shader\curl_noise.hlsli"
itof r5.w, l(1)  // r5.w <- v.w
mov r5.xyz, r5.xyzx  // r5.x <- v.x; r5.y <- v.y; r5.z <- v.z

#line 63
mov r6.xyzw, l(0.138197,0.276393,0.414590,-0.447214)  // r6.x <- c.x; r6.y <- c.y; r6.z <- c.z; r6.w <- c.w

#line 66
dp4 r3.w, r5.xyzw, l(0.309017, 0.309017, 0.309017, 0.309017)
add r7.xyzw, r3.wwww, r5.xyzw
round_ni r7.xyzw, r7.xyzw  // r7.x <- i.x; r7.y <- i.y; r7.z <- i.z; r7.w <- i.w

#line 68
mov r8.xyzw, -r7.xyzw
add r5.xyzw, r5.xyzw, r8.xyzw
dp4 r3.w, r7.xyzw, r6.xxxx
add r5.xyzw, r3.wwww, r5.xyzw  // r5.x <- x0.x; r5.y <- x0.y; r5.z <- x0.z; r5.w <- x0.w

#line 71
ge r8.xyz, r5.xxxx, r5.yzwy
movc r8.xyz, r8.xyzx, l(1.000000,1.000000,1.000000,0), l(0,0,0,0)  // r8.x <- isX.x; r8.y <- isX.y; r8.z <- isX.z

#line 72
ge r9.xyz, r5.yyzy, r5.zwwz
movc r9.xyz, r9.xyzx, l(1.000000,1.000000,1.000000,0), l(0,0,0,0)  // r9.x <- isYZ.x; r9.y <- isYZ.y; r9.z <- isYZ.z

#line 73
add r3.w, r8.y, r8.x
add r10.x, r8.z, r3.w  // r10.x <- i0.x

#line 74
mov r8.xyz, -r8.xyzx
add r8.xyz, r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // r8.x <- i0.y; r8.y <- i0.z; r8.z <- i0.w

#line 75
add r3.w, r9.y, r9.x
add r10.y, r3.w, r8.x  // r10.y <- i0.y

#line 76
mov r8.xw, -r9.xxxy
add r8.xw, r8.xxxw, l(1.000000, 0.000000, 0.000000, 1.000000)
add r8.xy, r8.xwxx, r8.yzyy  // r8.x <- i0.z; r8.y <- i0.w

#line 77
add r10.z, r9.z, r8.x  // r10.z <- i0.z

#line 78
mov r3.w, -r9.z
add r3.w, r3.w, l(1.000000)
add r10.w, r3.w, r8.y  // r10.w <- i0.w

#line 80
max r8.xyzw, r10.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
min r8.xyzw, r8.yzxw, l(1.000000, 1.000000, 1.000000, 1.000000)  // r8.x <- i3.y; r8.y <- i3.z; r8.z <- i3.x; r8.w <- i3.w

#line 81
itof r9.xyzw, l(1, 1, 1, 1)
mov r9.xyzw, -r9.xyzw
add r9.xyzw, r9.xyzw, r10.xyzw
max r9.xyzw, r9.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
min r9.xyzw, r9.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)  // r9.x <- i2.x; r9.y <- i2.y; r9.z <- i2.z; r9.w <- i2.w

#line 82
itof r11.xyzw, l(2, 2, 2, 2)
mov r11.xyzw, -r11.xyzw
add r10.xyzw, r10.xyzw, r11.xyzw
max r10.xyzw, r10.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
min r10.xyzw, r10.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)  // r10.x <- i1.x; r10.y <- i1.y; r10.z <- i1.z; r10.w <- i1.w

#line 84
mov r11.xyzw, -r10.xyzw
add r11.xyzw, r5.xyzw, r11.xyzw
add r11.xyzw, r6.xxxx, r11.xyzw  // r11.x <- x1.x; r11.y <- x1.y; r11.z <- x1.z; r11.w <- x1.w

#line 85
mov r12.xyzw, -r9.xyzw
add r12.xyzw, r5.xyzw, r12.xyzw
add r12.xyzw, r6.yyyy, r12.xyzw  // r12.x <- x2.x; r12.y <- x2.y; r12.z <- x2.z; r12.w <- x2.w

#line 86
mov r13.xyzw, -r8.zxyw
add r13.xyzw, r5.xyzw, r13.xyzw
add r13.xyzw, r6.zzzz, r13.xyzw  // r13.x <- x3.x; r13.y <- x3.y; r13.z <- x3.z; r13.w <- x3.w

#line 87
add r6.xyzw, r6.wwww, r5.xyzw  // r6.x <- x4.x; r6.y <- x4.y; r6.z <- x4.z; r6.w <- x4.w

#line 89
nop 
mov r7.xyzw, r7.xyzw
itof r3.w, l(289)

#line 16
div r14.xyzw, r7.xyzw, r3.wwww
round_ni r14.xyzw, r14.xyzw
mul r14.xyzw, r3.wwww, r14.xyzw
mov r14.xyzw, -r14.xyzw
add r7.xyzw, r7.wxyz, r14.wxyz  // r7.x <- <mod return value>.w; r7.y <- <mod return value>.x; r7.z <- <mod return value>.y; r7.w <- <mod return value>.z

#line 89
mov r7.xyzw, r7.xyzw  // r7.x <- i.w; r7.y <- i.x; r7.z <- i.y; r7.w <- i.z

#line 90
nop 
nop 
nop 
nop 
mov r7.x, r7.x

#line 25
nop 
mul r3.w, r7.x, l(34.000000)
add r3.w, r3.w, l(1.000000)
mul r3.w, r7.x, r3.w
itof r4.w, l(289)

#line 4
div r14.x, r3.w, r4.w
round_ni r14.x, r14.x
mul r4.w, r4.w, r14.x
mov r4.w, -r4.w
add r3.w, r3.w, r4.w  // r3.w <- <mod return value>

#line 25
mov r3.w, r3.w  // r3.w <- <permute return value>

#line 90
add r3.w, r7.w, r3.w

#line 25
nop 
mul r4.w, r3.w, l(34.000000)
add r4.w, r4.w, l(1.000000)
mul r3.w, r3.w, r4.w
itof r4.w, l(289)

#line 4
div r14.x, r3.w, r4.w
round_ni r14.x, r14.x
mul r4.w, r4.w, r14.x
mov r4.w, -r4.w
add r3.w, r3.w, r4.w  // r3.w <- <mod return value>

#line 25
mov r3.w, r3.w  // r3.w <- <permute return value>

#line 90
add r3.w, r7.z, r3.w

#line 25
nop 
mul r4.w, r3.w, l(34.000000)
add r4.w, r4.w, l(1.000000)
mul r3.w, r3.w, r4.w
itof r4.w, l(289)

#line 4
div r14.x, r3.w, r4.w
round_ni r14.x, r14.x
mul r4.w, r4.w, r14.x
mov r4.w, -r4.w
add r3.w, r3.w, r4.w  // r3.w <- <mod return value>

#line 25
mov r3.w, r3.w  // r3.w <- <permute return value>

#line 90
add r3.w, r7.y, r3.w

#line 25
nop 
mul r4.w, r3.w, l(34.000000)
add r4.w, r4.w, l(1.000000)
mul r3.w, r3.w, r4.w
itof r4.w, l(289)

#line 4
div r14.x, r3.w, r4.w
round_ni r14.x, r14.x
mul r4.w, r4.w, r14.x
mov r4.w, -r4.w
add r3.w, r3.w, r4.w  // r3.w <- <mod return value>

#line 25
mov r3.w, r3.w  // r3.w <- <permute return value>

#line 90
mov r3.w, r3.w  // r3.w <- j0

#line 91
nop 
nop 
nop 
nop 
mov r14.x, r10.w
mov r14.y, r9.w
mov r14.z, r8.w
mov r14.w, l(1.000000)
add r14.xyzw, r7.xxxx, r14.xyzw

#line 21
nop 
mul r15.xyzw, r14.xyzw, l(34.000000, 34.000000, 34.000000, 34.000000)
add r15.xyzw, r15.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r14.xyzw, r14.xyzw, r15.xyzw
itof r4.w, l(289)

#line 16
div r15.xyzw, r14.xyzw, r4.wwww
round_ni r15.xyzw, r15.xyzw
mul r15.xyzw, r4.wwww, r15.xyzw
mov r15.xyzw, -r15.xyzw
add r14.xyzw, r14.xyzw, r15.xyzw  // r14.x <- <mod return value>.x; r14.y <- <mod return value>.y; r14.z <- <mod return value>.z; r14.w <- <mod return value>.w

#line 21
mov r14.xyzw, r14.xyzw  // r14.x <- <permute return value>.x; r14.y <- <permute return value>.y; r14.z <- <permute return value>.z; r14.w <- <permute return value>.w

#line 91
add r14.xyzw, r7.wwww, r14.xyzw
mov r15.x, r10.z
mov r15.y, r9.z
mov r15.z, r8.y
mov r15.w, l(1.000000)
add r14.xyzw, r14.xyzw, r15.xyzw

#line 21
nop 
mul r15.xyzw, r14.xyzw, l(34.000000, 34.000000, 34.000000, 34.000000)
add r15.xyzw, r15.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r14.xyzw, r14.xyzw, r15.xyzw
itof r4.w, l(289)

#line 16
div r15.xyzw, r14.xyzw, r4.wwww
round_ni r15.xyzw, r15.xyzw
mul r15.xyzw, r4.wwww, r15.xyzw
mov r15.xyzw, -r15.xyzw
add r14.xyzw, r14.xyzw, r15.xyzw  // r14.x <- <mod return value>.x; r14.y <- <mod return value>.y; r14.z <- <mod return value>.z; r14.w <- <mod return value>.w

#line 21
mov r14.xyzw, r14.xyzw  // r14.x <- <permute return value>.x; r14.y <- <permute return value>.y; r14.z <- <permute return value>.z; r14.w <- <permute return value>.w

#line 91
add r14.xyzw, r7.zzzz, r14.xyzw
mov r15.x, r10.y
mov r15.y, r9.y
mov r15.z, r8.x
mov r15.w, l(1.000000)
add r14.xyzw, r14.xyzw, r15.xyzw

#line 21
nop 
mul r15.xyzw, r14.xyzw, l(34.000000, 34.000000, 34.000000, 34.000000)
add r15.xyzw, r15.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r14.xyzw, r14.xyzw, r15.xyzw
itof r4.w, l(289)

#line 16
div r15.xyzw, r14.xyzw, r4.wwww
round_ni r15.xyzw, r15.xyzw
mul r15.xyzw, r4.wwww, r15.xyzw
mov r15.xyzw, -r15.xyzw
add r14.xyzw, r14.xyzw, r15.xyzw  // r14.x <- <mod return value>.x; r14.y <- <mod return value>.y; r14.z <- <mod return value>.z; r14.w <- <mod return value>.w

#line 21
mov r14.xyzw, r14.xyzw  // r14.x <- <permute return value>.x; r14.y <- <permute return value>.y; r14.z <- <permute return value>.z; r14.w <- <permute return value>.w

#line 91
add r7.xyzw, r7.yyyy, r14.xyzw
mov r8.x, r10.x
mov r8.y, r9.x
mov r8.w, l(1.000000)
add r7.xyzw, r7.xyzw, r8.xyzw

#line 21
nop 
mul r8.xyzw, r7.xyzw, l(34.000000, 34.000000, 34.000000, 34.000000)
add r8.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r7.xyzw, r7.xyzw, r8.xyzw
itof r4.w, l(289)

#line 16
div r8.xyzw, r7.xyzw, r4.wwww
round_ni r8.xyzw, r8.xyzw
mul r8.xyzw, r4.wwww, r8.xyzw
mov r8.xyzw, -r8.xyzw
add r7.xyzw, r7.xyzw, r8.xyzw  // r7.x <- <mod return value>.x; r7.y <- <mod return value>.y; r7.z <- <mod return value>.z; r7.w <- <mod return value>.w

#line 21
mov r7.xyzw, r7.xyzw  // r7.x <- <permute return value>.x; r7.y <- <permute return value>.y; r7.z <- <permute return value>.z; r7.w <- <permute return value>.w

#line 91
mov r7.xyzw, r7.xyzw  // r7.x <- j1.x; r7.y <- j1.y; r7.z <- j1.z; r7.w <- j1.w

#line 97
mov r8.xyz, l(0.003401,0.020408,0.142857,0)  // r8.x <- ip.x; r8.y <- ip.y; r8.z <- ip.z

#line 99
nop 
mov r3.w, r3.w
mov r8.xyz, r8.xyzx

#line 47
itof r9.xyz, l(1, 1, 1, 0)  // r9.x <- ones.x; r9.y <- ones.y; r9.z <- ones.z

#line 49
mul r10.xyz, r3.wwww, r8.xyzx
frc r10.xyz, r10.xyzx
itof r14.xyz, l(7, 7, 7, 0)
mul r10.xyz, r10.xyzx, r14.xyzx
round_ni r10.xyz, r10.xyzx
mul r10.xyz, r8.zzzz, r10.xyzx
itof r14.xyz, l(1, 1, 1, 0)
mov r14.xyz, -r14.xyzx
add r10.xyz, r10.xyzx, r14.xyzx  // r10.x <- p.x; r10.y <- p.y; r10.z <- p.z

#line 50
mov r14.xyz, -r10.xyzx
max r14.xyz, r10.xyzx, r14.xyzx
dp3 r3.w, r14.xyzx, r9.xyzx
mov r3.w, -r3.w
add r9.w, r3.w, l(1.500000)  // r9.w <- p.w

#line 53
itof r3.w, l(0)
itof r4.w, l(0)
ge r4.w, r4.w, r10.x
movc r4.w, r4.w, l(1.000000), l(0)
mov r8.w, -r10.x
add r3.w, r3.w, r8.w
mul r3.w, r3.w, r4.w
add r14.x, r3.w, r10.x  // r14.x <- s.x

#line 54
itof r3.w, l(0)
itof r4.w, l(0)
ge r4.w, r4.w, r10.y
movc r4.w, r4.w, l(1.000000), l(0)
mov r8.w, -r10.y
add r3.w, r3.w, r8.w
mul r3.w, r3.w, r4.w
add r14.y, r3.w, r10.y  // r14.y <- s.y

#line 55
itof r3.w, l(0)
itof r4.w, l(0)
ge r4.w, r4.w, r10.z
movc r4.w, r4.w, l(1.000000), l(0)
mov r8.w, -r10.z
add r3.w, r3.w, r8.w
mul r3.w, r3.w, r4.w
add r14.z, r3.w, r10.z  // r14.z <- s.z

#line 56
itof r3.w, l(0)
itof r4.w, l(0)
ge r4.w, r4.w, r9.w
movc r4.w, r4.w, l(1.000000), l(0)
mov r8.w, -r9.w
add r3.w, r3.w, r8.w
mul r3.w, r3.w, r4.w
add r3.w, r3.w, r9.w  // r3.w <- s.w

#line 57
itof r15.xyz, l(2, 2, 2, 0)
mul r14.xyz, r14.xyzx, r15.xyzx
itof r15.xyz, l(1, 1, 1, 0)
mov r15.xyz, -r15.xyzx
add r14.xyz, r14.xyzx, r15.xyzx
mul r14.xyz, r3.wwww, r14.xyzx
add r9.xyz, r10.xyzx, r14.xyzx  // r9.x <- p.x; r9.y <- p.y; r9.z <- p.z

#line 58
mov r9.xyz, r9.xyzx  // r9.x <- <grad4 return value>.x; r9.y <- <grad4 return value>.y; r9.z <- <grad4 return value>.z
mov r9.w, r9.w  // r9.w <- <grad4 return value>.w

#line 99
mov r9.xyzw, r9.xyzw  // r9.x <- p0.x; r9.y <- p0.y; r9.z <- p0.z; r9.w <- p0.w

#line 100
nop 
mov r7.x, r7.x

#line 47
itof r10.xyz, l(1, 1, 1, 0)  // r10.x <- ones.x; r10.y <- ones.y; r10.z <- ones.z

#line 49
mul r14.xyz, r7.xxxx, r8.xyzx
frc r14.xyz, r14.xyzx
itof r15.xyz, l(7, 7, 7, 0)
mul r14.xyz, r14.xyzx, r15.xyzx
round_ni r14.xyz, r14.xyzx
mul r14.xyz, r8.zzzz, r14.xyzx
itof r15.xyz, l(1, 1, 1, 0)
mov r15.xyz, -r15.xyzx
add r14.xyz, r14.xyzx, r15.xyzx  // r14.x <- p.x; r14.y <- p.y; r14.z <- p.z

#line 50
mov r15.xyz, -r14.xyzx
max r15.xyz, r14.xyzx, r15.xyzx
dp3 r3.w, r15.xyzx, r10.xyzx
mov r3.w, -r3.w
add r10.w, r3.w, l(1.500000)  // r10.w <- p.w

#line 53
itof r3.w, l(0)
itof r4.w, l(0)
ge r4.w, r4.w, r14.x
movc r4.w, r4.w, l(1.000000), l(0)
mov r7.x, -r14.x
add r3.w, r3.w, r7.x
mul r3.w, r3.w, r4.w
add r15.x, r3.w, r14.x  // r15.x <- s.x

#line 54
itof r3.w, l(0)
itof r4.w, l(0)
ge r4.w, r4.w, r14.y
movc r4.w, r4.w, l(1.000000), l(0)
mov r7.x, -r14.y
add r3.w, r3.w, r7.x
mul r3.w, r3.w, r4.w
add r15.y, r3.w, r14.y  // r15.y <- s.y

#line 55
itof r3.w, l(0)
itof r4.w, l(0)
ge r4.w, r4.w, r14.z
movc r4.w, r4.w, l(1.000000), l(0)
mov r7.x, -r14.z
add r3.w, r3.w, r7.x
mul r3.w, r3.w, r4.w
add r15.z, r3.w, r14.z  // r15.z <- s.z

#line 56
itof r3.w, l(0)
itof r4.w, l(0)
ge r4.w, r4.w, r10.w
movc r4.w, r4.w, l(1.000000), l(0)
mov r7.x, -r10.w
add r3.w, r3.w, r7.x
mul r3.w, r3.w, r4.w
add r3.w, r3.w, r10.w  // r3.w <- s.w

#line 57
itof r16.xyz, l(2, 2, 2, 0)
mul r15.xyz, r15.xyzx, r16.xyzx
itof r16.xyz, l(1, 1, 1, 0)
mov r16.xyz, -r16.xyzx
add r15.xyz, r15.xyzx, r16.xyzx
mul r15.xyz, r3.wwww, r15.xyzx
add r10.xyz, r14.xyzx, r15.xyzx  // r10.x <- p.x; r10.y <- p.y; r10.z <- p.z

#line 58
mov r10.xyz, r10.xyzx  // r10.x <- <grad4 return value>.x; r10.y <- <grad4 return value>.y; r10.z <- <grad4 return value>.z
mov r10.w, r10.w  // r10.w <- <grad4 return value>.w

#line 100
mov r10.xyzw, r10.xyzw  // r10.x <- p1.x; r10.y <- p1.y; r10.z <- p1.z; r10.w <- p1.w

#line 101
nop 
mov r7.y, r7.y

#line 47
itof r14.xyz, l(1, 1, 1, 0)  // r14.x <- ones.x; r14.y <- ones.y; r14.z <- ones.z

#line 49
mul r15.xyz, r7.yyyy, r8.xyzx
frc r15.xyz, r15.xyzx
itof r16.xyz, l(7, 7, 7, 0)
mul r15.xyz, r15.xyzx, r16.xyzx
round_ni r15.xyz, r15.xyzx
mul r15.xyz, r8.zzzz, r15.xyzx
itof r16.xyz, l(1, 1, 1, 0)
mov r16.xyz, -r16.xyzx
add r15.xyz, r15.xyzx, r16.xyzx  // r15.x <- p.x; r15.y <- p.y; r15.z <- p.z

#line 50
mov r16.xyz, -r15.xyzx
max r16.xyz, r15.xyzx, r16.xyzx
dp3 r3.w, r16.xyzx, r14.xyzx
mov r3.w, -r3.w
add r14.w, r3.w, l(1.500000)  // r14.w <- p.w

#line 53
itof r3.w, l(0)
itof r4.w, l(0)
ge r4.w, r4.w, r15.x
movc r4.w, r4.w, l(1.000000), l(0)
mov r7.x, -r15.x
add r3.w, r3.w, r7.x
mul r3.w, r3.w, r4.w
add r16.x, r3.w, r15.x  // r16.x <- s.x

#line 54
itof r3.w, l(0)
itof r4.w, l(0)
ge r4.w, r4.w, r15.y
movc r4.w, r4.w, l(1.000000), l(0)
mov r7.x, -r15.y
add r3.w, r3.w, r7.x
mul r3.w, r3.w, r4.w
add r16.y, r3.w, r15.y  // r16.y <- s.y

#line 55
itof r3.w, l(0)
itof r4.w, l(0)
ge r4.w, r4.w, r15.z
movc r4.w, r4.w, l(1.000000), l(0)
mov r7.x, -r15.z
add r3.w, r3.w, r7.x
mul r3.w, r3.w, r4.w
add r16.z, r3.w, r15.z  // r16.z <- s.z

#line 56
itof r3.w, l(0)
itof r4.w, l(0)
ge r4.w, r4.w, r14.w
movc r4.w, r4.w, l(1.000000), l(0)
mov r7.x, -r14.w
add r3.w, r3.w, r7.x
mul r3.w, r3.w, r4.w
add r3.w, r3.w, r14.w  // r3.w <- s.w

#line 57
itof r17.xyz, l(2, 2, 2, 0)
mul r16.xyz, r16.xyzx, r17.xyzx
itof r17.xyz, l(1, 1, 1, 0)
mov r17.xyz, -r17.xyzx
add r16.xyz, r16.xyzx, r17.xyzx
mul r16.xyz, r3.wwww, r16.xyzx
add r14.xyz, r15.xyzx, r16.xyzx  // r14.x <- p.x; r14.y <- p.y; r14.z <- p.z

#line 58
mov r14.xyz, r14.xyzx  // r14.x <- <grad4 return value>.x; r14.y <- <grad4 return value>.y; r14.z <- <grad4 return value>.z
mov r14.w, r14.w  // r14.w <- <grad4 return value>.w

#line 101
mov r14.xyzw, r14.xyzw  // r14.x <- p2.x; r14.y <- p2.y; r14.z <- p2.z; r14.w <- p2.w

#line 102
nop 
mov r7.z, r7.z

#line 47
itof r15.xyz, l(1, 1, 1, 0)  // r15.x <- ones.x; r15.y <- ones.y; r15.z <- ones.z

#line 49
mul r7.xyz, r7.zzzz, r8.xyzx
frc r7.xyz, r7.xyzx
itof r16.xyz, l(7, 7, 7, 0)
mul r7.xyz, r7.xyzx, r16.xyzx
round_ni r7.xyz, r7.xyzx
mul r7.xyz, r8.zzzz, r7.xyzx
itof r16.xyz, l(1, 1, 1, 0)
mov r16.xyz, -r16.xyzx
add r7.xyz, r7.xyzx, r16.xyzx  // r7.x <- p.x; r7.y <- p.y; r7.z <- p.z

#line 50
mov r16.xyz, -r7.xyzx
max r16.xyz, r7.xyzx, r16.xyzx
dp3 r3.w, r16.xyzx, r15.xyzx
mov r3.w, -r3.w
add r15.w, r3.w, l(1.500000)  // r15.w <- p.w

#line 53
itof r3.w, l(0)
itof r4.w, l(0)
ge r4.w, r4.w, r7.x
movc r4.w, r4.w, l(1.000000), l(0)
mov r8.w, -r7.x
add r3.w, r3.w, r8.w
mul r3.w, r3.w, r4.w
add r16.x, r3.w, r7.x  // r16.x <- s.x

#line 54
itof r3.w, l(0)
itof r4.w, l(0)
ge r4.w, r4.w, r7.y
movc r4.w, r4.w, l(1.000000), l(0)
mov r8.w, -r7.y
add r3.w, r3.w, r8.w
mul r3.w, r3.w, r4.w
add r16.y, r3.w, r7.y  // r16.y <- s.y

#line 55
itof r3.w, l(0)
itof r4.w, l(0)
ge r4.w, r4.w, r7.z
movc r4.w, r4.w, l(1.000000), l(0)
mov r8.w, -r7.z
add r3.w, r3.w, r8.w
mul r3.w, r3.w, r4.w
add r16.z, r3.w, r7.z  // r16.z <- s.z

#line 56
itof r3.w, l(0)
itof r4.w, l(0)
ge r4.w, r4.w, r15.w
movc r4.w, r4.w, l(1.000000), l(0)
mov r8.w, -r15.w
add r3.w, r3.w, r8.w
mul r3.w, r3.w, r4.w
add r3.w, r3.w, r15.w  // r3.w <- s.w

#line 57
itof r17.xyz, l(2, 2, 2, 0)
mul r16.xyz, r16.xyzx, r17.xyzx
itof r17.xyz, l(1, 1, 1, 0)
mov r17.xyz, -r17.xyzx
add r16.xyz, r16.xyzx, r17.xyzx
mul r16.xyz, r3.wwww, r16.xyzx
add r15.xyz, r7.xyzx, r16.xyzx  // r15.x <- p.x; r15.y <- p.y; r15.z <- p.z

#line 58
mov r15.xyz, r15.xyzx  // r15.x <- <grad4 return value>.x; r15.y <- <grad4 return value>.y; r15.z <- <grad4 return value>.z
mov r15.w, r15.w  // r15.w <- <grad4 return value>.w

#line 102
mov r15.xyzw, r15.xyzw  // r15.x <- p3.x; r15.y <- p3.y; r15.z <- p3.z; r15.w <- p3.w

#line 103
nop 
mov r7.w, r7.w

#line 47
itof r7.xyz, l(1, 1, 1, 0)  // r7.x <- ones.x; r7.y <- ones.y; r7.z <- ones.z

#line 49
mul r8.xyw, r7.wwww, r8.xyxz
frc r8.xyw, r8.xyxw
itof r16.xyz, l(7, 7, 7, 0)
mul r8.xyw, r8.xyxw, r16.xyxz
round_ni r8.xyw, r8.xyxw
mul r8.xyz, r8.zzzz, r8.xywx
itof r16.xyz, l(1, 1, 1, 0)
mov r16.xyz, -r16.xyzx
add r8.xyz, r8.xyzx, r16.xyzx  // r8.x <- p.x; r8.y <- p.y; r8.z <- p.z

#line 50
mov r16.xyz, -r8.xyzx
max r16.xyz, r8.xyzx, r16.xyzx
dp3 r3.w, r16.xyzx, r7.xyzx
mov r3.w, -r3.w
add r7.w, r3.w, l(1.500000)  // r7.w <- p.w

#line 53
itof r3.w, l(0)
itof r4.w, l(0)
ge r4.w, r4.w, r8.x
movc r4.w, r4.w, l(1.000000), l(0)
mov r8.w, -r8.x
add r3.w, r3.w, r8.w
mul r3.w, r3.w, r4.w
add r16.x, r3.w, r8.x  // r16.x <- s.x

#line 54
itof r3.w, l(0)
itof r4.w, l(0)
ge r4.w, r4.w, r8.y
movc r4.w, r4.w, l(1.000000), l(0)
mov r8.w, -r8.y
add r3.w, r3.w, r8.w
mul r3.w, r3.w, r4.w
add r16.y, r3.w, r8.y  // r16.y <- s.y

#line 55
itof r3.w, l(0)
itof r4.w, l(0)
ge r4.w, r4.w, r8.z
movc r4.w, r4.w, l(1.000000), l(0)
mov r8.w, -r8.z
add r3.w, r3.w, r8.w
mul r3.w, r3.w, r4.w
add r16.z, r3.w, r8.z  // r16.z <- s.z

#line 56
itof r3.w, l(0)
itof r4.w, l(0)
ge r4.w, r4.w, r7.w
movc r4.w, r4.w, l(1.000000), l(0)
mov r8.w, -r7.w
add r3.w, r3.w, r8.w
mul r3.w, r3.w, r4.w
add r3.w, r3.w, r7.w  // r3.w <- s.w

#line 57
itof r17.xyz, l(2, 2, 2, 0)
mul r16.xyz, r16.xyzx, r17.xyzx
itof r17.xyz, l(1, 1, 1, 0)
mov r17.xyz, -r17.xyzx
add r16.xyz, r16.xyzx, r17.xyzx
mul r16.xyz, r3.wwww, r16.xyzx
add r7.xyz, r8.xyzx, r16.xyzx  // r7.x <- p.x; r7.y <- p.y; r7.z <- p.z

#line 58
mov r7.xyz, r7.xyzx  // r7.x <- <grad4 return value>.x; r7.y <- <grad4 return value>.y; r7.z <- <grad4 return value>.z
mov r7.w, r7.w  // r7.w <- <grad4 return value>.w

#line 103
mov r7.xyzw, r7.xyzw  // r7.x <- p4.x; r7.y <- p4.y; r7.z <- p4.z; r7.w <- p4.w

#line 105
nop 
dp4 r8.x, r9.xyzw, r9.xyzw
dp4 r8.y, r10.xyzw, r10.xyzw
dp4 r8.z, r14.xyzw, r14.xyzw
dp4 r8.w, r15.xyzw, r15.xyzw

#line 30
mul r8.xyzw, r8.xyzw, l(0.853735, 0.853735, 0.853735, 0.853735)
mov r8.xyzw, -r8.xyzw
add r8.xyzw, r8.xyzw, l(1.792843, 1.792843, 1.792843, 1.792843)  // r8.x <- <taylorInvSqrt return value>.x; r8.y <- <taylorInvSqrt return value>.y; r8.z <- <taylorInvSqrt return value>.z; r8.w <- <taylorInvSqrt return value>.w

#line 105
mov r8.xyzw, r8.xyzw  // r8.x <- norm.x; r8.y <- norm.y; r8.z <- norm.z; r8.w <- norm.w

#line 106
mul r9.xyzw, r8.xxxx, r9.xyzw

#line 107
mul r10.xyzw, r8.yyyy, r10.xyzw

#line 108
mul r14.xyzw, r8.zzzz, r14.xyzw

#line 109
mul r8.xyzw, r8.wwww, r15.xyzw  // r8.x <- p3.x; r8.y <- p3.y; r8.z <- p3.z; r8.w <- p3.w

#line 110
nop 
dp4 r15.w, r7.xyzw, r7.xyzw
mov r15.xyzw, r15.wwww

#line 30
mul r15.xyzw, r15.xyzw, l(0.853735, 0.853735, 0.853735, 0.853735)
mov r15.xyzw, -r15.xyzw
add r15.xyzw, r15.xyzw, l(1.792843, 1.792843, 1.792843, 1.792843)  // r15.x <- <taylorInvSqrt return value>.x; r15.y <- <taylorInvSqrt return value>.y; r15.z <- <taylorInvSqrt return value>.z; r15.w <- <taylorInvSqrt return value>.w

#line 110
mul r7.xyzw, r7.xyzw, r15.xyzw

#line 112
dp4 r9.x, r9.xyzw, r5.xyzw  // r9.x <- values0.x
dp4 r9.y, r10.xyzw, r11.xyzw  // r9.y <- values0.y
dp4 r9.z, r14.xyzw, r12.xyzw  // r9.z <- values0.z

#line 113
dp4 r15.x, r8.xyzw, r13.xyzw  // r15.x <- values1.x
dp4 r15.y, r7.xyzw, r6.xyzw  // r15.y <- values1.y

#line 115
dp4 r16.x, r5.xyzw, r5.xyzw
dp4 r16.y, r11.xyzw, r11.xyzw
dp4 r16.z, r12.xyzw, r12.xyzw
mov r16.xyz, -r16.xyzx
add r16.xyz, r16.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
itof r17.xyz, l(0, 0, 0, 0)
max r16.xyz, r16.xyzx, r17.xyzx  // r16.x <- m0.x; r16.y <- m0.y; r16.z <- m0.z

#line 116
dp4 r17.x, r13.xyzw, r13.xyzw
dp4 r17.y, r6.xyzw, r6.xyzw
mov r15.zw, -r17.xxxy
add r15.zw, r15.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
itof r17.xy, l(0, 0, 0, 0)
max r15.zw, r15.zzzw, r17.xxxy  // r15.z <- m1.x; r15.w <- m1.y

#line 118
itof r17.xyz, l(-6, -6, -6, 0)
mul r17.xyz, r16.xyzx, r17.xyzx
mul r17.xyz, r16.xyzx, r17.xyzx
mul r9.xyz, r9.xyzx, r17.xyzx  // r9.x <- temp0.x; r9.y <- temp0.y; r9.z <- temp0.z

#line 119
itof r16.zw, l(0, 0, -6, -6)
mul r16.zw, r15.zzzw, r16.zzzw
mul r16.zw, r15.zzzw, r16.zzzw
mul r15.xy, r15.xyxx, r16.zwzz  // r15.x <- temp1.x; r15.y <- temp1.y

#line 121
mul r16.zw, r16.xxxy, r16.xxxy
mul r16.xy, r16.xyxx, r16.zwzz  // r16.x <- mmm0.x; r16.y <- mmm0.y

#line 122
mul r16.zw, r15.zzzw, r15.zzzw
mul r15.zw, r15.zzzw, r16.zzzw  // r15.z <- mmm1.x; r15.w <- mmm1.y

#line 124
mul r5.xyzw, r5.xyzw, r9.xxxx
mul r11.xyzw, r11.xyzw, r9.yyyy
add r5.xyzw, r5.xyzw, r11.xyzw
mul r9.xyzw, r12.xyzw, r9.zzzz
add r5.xyzw, r5.xyzw, r9.xyzw
mul r9.xyzw, r13.xyzw, r15.xxxx
add r5.xyzw, r5.xyzw, r9.xyzw
mul r6.xyzw, r6.xyzw, r15.yyyy
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, r10.xyzw, r16.xxxx
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, r14.xyzw, r16.yyyy
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, r8.xyzw, r15.zzzz
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, r7.xyzw, r15.wwww
add r5.xyzw, r5.xyzw, r6.xyzw  // r5.x <- d.x; r5.y <- d.y; r5.z <- d.z; r5.w <- d.w

#line 127
dp3 r3.w, r5.xyzx, r5.xyzx
rsq r3.w, r3.w
mul r5.xyz, r3.wwww, r5.xyzx
mul r5.xyz, r5.wwww, r5.xyzx  // r5.x <- <snoise return value>.x; r5.y <- <snoise return value>.y; r5.z <- <snoise return value>.z

#line 59 "D:\就職作品\01\gameLib(ver 1.2)\Source\Shader\noise_geometric_particle.hlsl"
dp3 r3.w, r5.xyzx, r5.xyzx
rsq r3.w, r3.w
mul r5.xyz, r3.wwww, r5.xyzx
add r5.xyz, r5.xyzx, cb0[0].xyzx
mul r5.xyz, r5.xyzx, cb1[0].wwww
add r4.xyz, r4.xyzx, r5.xyzx

#line 60
add r5.xyz, r1.xyzx, r4.xyzx
itof r6.xyz, l(0, 0, 0, 0)
mov r7.xyz, -r5.xyzx
add r6.xyz, r6.xyzx, r7.xyzx
mul r6.xyz, r0.zzzz, r6.xyzx
add r1.xyz, r5.xyzx, r6.xyzx

#line 61
itof r5.xyzw, l(0, 0, 0, 0)
mov r6.xyzw, -r2.xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r5.xyzw, r0.zzzz, r5.xyzw
add r2.xyzw, r2.xyzw, r5.xyzw

#line 62
mul r5.xyz, cb0[1].xyzx, cb1[0].wwww
add r3.xyz, r3.xyzx, r5.xyzx
itof r5.xyz, l(0, 0, 0, 0)
mov r6.xyz, -r3.xyzx
add r5.xyz, r5.xyzx, r6.xyzx
mul r5.xyz, r0.zzzz, r5.xyzx
add r3.xyz, r3.xyzx, r5.xyzx

#line 65
mov r0.z, l(0)
iadd r0.z, r0.z, r0.y
store_raw u0.xyzw, r0.z, r1.xyzw

#line 66
mov r0.z, l(16)
iadd r0.z, r0.z, r0.y
store_raw u0.xyzw, r0.z, r2.xyzw

#line 67
mov r0.z, l(32)
iadd r0.z, r0.z, r0.y
store_raw u0.xyz, r0.z, r3.xyzx

#line 68
mov r0.z, l(44)
iadd r0.z, r0.z, r0.y
store_raw u0.xyz, r0.z, r4.xyzx

#line 69
mov r0.z, l(56)
iadd r0.z, r0.z, r0.y
store_raw u0.x, r0.z, r0.x

#line 70
mov r0.x, l(60)
iadd r0.x, r0.x, r0.y
store_raw u0.x, r0.x, r0.w

#line 71
ret 
// Approximately 659 instruction slots used
