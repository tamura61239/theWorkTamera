//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   row_major float4x4 view;           // Offset:    0 Size:    64
//   row_major float4x4 projection;     // Offset:   64 Size:    64
//
// }
//
// cbuffer CbObj
// {
//
//   float4 materialColor;              // Offset:    0 Size:    16
//   row_major float4x4 world;          // Offset:   16 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CbScene                           cbuffer      NA          NA            cb0      1 
// CbObj                             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xy          4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[8], immediateIndexed
dcl_constantbuffer CB1[5], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xy
dcl_output o5.xyz
dcl_output o6.xyz
dcl_temps 8
//
// Initial variable locations:
//   v0.x <- position.x; v0.y <- position.y; v0.z <- position.z; v0.w <- position.w; 
//   v1.x <- normal.x; v1.y <- normal.y; v1.z <- normal.z; 
//   v2.x <- texcoord.x; v2.y <- texcoord.y; 
//   o6.x <- <main return value>.vB.x; o6.y <- <main return value>.vB.y; o6.z <- <main return value>.vB.z; 
//   o5.x <- <main return value>.vT.x; o5.y <- <main return value>.vT.y; o5.z <- <main return value>.vT.z; 
//   o4.x <- <main return value>.texcoord.x; o4.y <- <main return value>.texcoord.y; 
//   o3.x <- <main return value>.worldPosition.x; o3.y <- <main return value>.worldPosition.y; o3.z <- <main return value>.worldPosition.z; 
//   o2.x <- <main return value>.worldNormal.x; o2.y <- <main return value>.worldNormal.y; o2.z <- <main return value>.worldNormal.z; 
//   o1.x <- <main return value>.color.x; o1.y <- <main return value>.color.y; o1.z <- <main return value>.color.z; o1.w <- <main return value>.color.w; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 9 "D:\就職作品\01\gameLib(ver 1.2)\Source\Shader\Lib\static_mesh_normal_vs.hlsl"
mul r0.xyzw, v0.xxxx, cb1[1].xyzw
mul r1.xyzw, v0.yyyy, cb1[2].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, v0.zzzz, cb1[3].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, v0.wwww, cb1[4].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- vout.position.x; r0.y <- vout.position.y; r0.z <- vout.position.z; r0.w <- vout.position.w

#line 10
mov r0.xyz, r0.xyzx  // r0.x <- vout.worldPosition.x; r0.y <- vout.worldPosition.y; r0.z <- vout.worldPosition.z

#line 11
mul r1.xyzw, r0.xxxx, cb0[0].xyzw
mul r2.xyzw, r0.yyyy, cb0[1].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, r0.zzzz, cb0[2].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, r0.wwww, cb0[3].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw  // r1.x <- vout.position.x; r1.y <- vout.position.y; r1.z <- vout.position.z; r1.w <- vout.position.w

#line 12
mul r2.xyzw, r1.xxxx, cb0[4].xyzw
mul r3.xyzw, r1.yyyy, cb0[5].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, r1.zzzz, cb0[6].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r1.xyzw, r1.wwww, cb0[7].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw  // r1.x <- vout.position.x; r1.y <- vout.position.y; r1.z <- vout.position.z; r1.w <- vout.position.w

#line 14
mul r2.xyz, v1.xxxx, cb1[1].zxyz
mul r3.xyz, v1.yyyy, cb1[2].zxyz
add r2.xyz, r2.xyzx, r3.xyzx
mul r3.xyz, v1.zzzz, cb1[3].zxyz
add r2.xyz, r2.xyzx, r3.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx  // r2.x <- wN.z; r2.y <- wN.x; r2.z <- wN.y

#line 15
mov r3.xyz, r2.yzxy  // r3.x <- vout.worldNormal.x; r3.y <- vout.worldNormal.y; r3.z <- vout.worldNormal.z

#line 16
mov r4.xyzw, cb1[0].xyzw  // r4.x <- vout.color.x; r4.y <- vout.color.y; r4.z <- vout.color.z; r4.w <- vout.color.w

#line 18
mov r5.xy, v2.xyxx  // r5.x <- vout.texcoord.x; r5.y <- vout.texcoord.y

#line 20
mov r2.xyz, r2.xyzx  // r2.x <- vN.z; r2.y <- vN.x; r2.z <- vN.y

#line 23
mov r6.xyz, l(-0.001000,0,1.000000,0)  // r6.x <- vB.z; r6.y <- vB.x; r6.z <- vB.y

#line 24
mul r7.xyz, r2.xyzx, r6.zxyz
mul r6.xyz, r2.zxyz, r6.xyzx
mov r6.xyz, -r6.xyzx
add r6.xyz, r6.xyzx, r7.xyzx
dp3 r0.w, r6.xyzx, r6.xyzx
rsq r0.w, r0.w
mul r6.xyz, r0.wwww, r6.xyzx  // r6.x <- vT.x; r6.y <- vT.y; r6.z <- vT.z

#line 25
mul r7.xyz, r2.zxyz, r6.zxyz
mul r2.xyz, r2.xyzx, r6.yzxy
mov r2.xyz, -r2.xyzx
add r2.xyz, r2.xyzx, r7.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx  // r2.x <- vB.x; r2.y <- vB.y; r2.z <- vB.z

#line 27
mov r6.xyz, r6.xyzx  // r6.x <- vout.vT.x; r6.y <- vout.vT.y; r6.z <- vout.vT.z

#line 28
mov r2.xyz, r2.xyzx  // r2.x <- vout.vB.x; r2.y <- vout.vB.y; r2.z <- vout.vB.z

#line 30
mov o0.xyzw, r1.xyzw
mov o1.xyzw, r4.xyzw
mov o2.xyz, r3.xyzx
mov o3.xyz, r0.xyzx
mov o5.xyz, r6.xyzx
mov o6.xyz, r2.xyzx
mov o4.xy, r5.xyxx
ret 
// Approximately 59 instruction slots used
