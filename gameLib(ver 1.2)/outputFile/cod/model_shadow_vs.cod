//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   row_major float4x4 view;           // Offset:    0 Size:    64
//   row_major float4x4 projection;     // Offset:   64 Size:    64
//
// }
//
// cbuffer CbMesh
// {
//
//   row_major float4x4 boneTransforms[128];// Offset:    0 Size:  8192
//   row_major float4x4 beforeBoneTransforms[128];// Offset: 8192 Size:  8192 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CbScene                           cbuffer      NA          NA            cb0      1 
// CbMesh                            cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float       
// WEIGHTS                  0   xyzw        3     NONE   float   xyzw
// BONES                    0   xyzw        4     NONE    uint   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000},
                              { -1, 0, 0, 0},
                              { 0, -1, 0, 0},
                              { 0, 0, -1, 0},
                              { 0, 0, 0, -1} }
dcl_constantbuffer CB0[8], immediateIndexed
dcl_constantbuffer CB1[512], dynamicIndexed
dcl_input v0.xyzw
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_output_siv o0.xyzw, position
dcl_temps 7
//
// Initial variable locations:
//   v0.x <- position.x; v0.y <- position.y; v0.z <- position.z; v0.w <- position.w; 
//   v1.x <- normal.x; v1.y <- normal.y; v1.z <- normal.z; 
//   v2.x <- texcoord.x; v2.y <- texcoord.y; 
//   v3.x <- boneWeights.x; v3.y <- boneWeights.y; v3.z <- boneWeights.z; v3.w <- boneWeights.w; 
//   v4.x <- boneIndices.x; v4.y <- boneIndices.y; v4.z <- boneIndices.z; v4.w <- boneIndices.w; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 14 "D:\就職作品\01\gameLib(ver 1.2)\Source\Shader\Lib\model_shadow_vs.hlsl"
itof r0.xyz, l(0, 0, 0, 0)  // r0.x <- p.x; r0.y <- p.y; r0.z <- p.z

#line 15
mov r0.w, l(0)  // r0.w <- i
mov r1.xyz, r0.xyzx  // r1.x <- p.x; r1.y <- p.y; r1.z <- p.z
mov r1.w, r0.w  // r1.w <- i
loop 
  ilt r2.x, r1.w, l(4)
  breakc_z r2.x

#line 17
  dp4 r2.x, v3.xyzw, icb[r1.w + 0].xyzw
  and r3.xyzw, v4.xyzw, icb[r1.w + 4].xyzw
  or r2.yz, r3.yywy, r3.xxzx
  or r2.y, r2.z, r2.y
  imul null, r2.y, r2.y, l(4)
  mul r3.xyz, v0.xxxx, cb1[r2.y + 0].xyzx
  mul r4.xyz, v0.yyyy, cb1[r2.y + 1].xyzx
  add r3.xyz, r3.xyzx, r4.xyzx
  mul r4.xyz, v0.zzzz, cb1[r2.y + 2].xyzx
  add r3.xyz, r3.xyzx, r4.xyzx
  mul r2.yzw, v0.wwww, cb1[r2.y + 3].xxyz
  add r2.yzw, r2.yyzw, r3.xxyz
  mul r2.xyz, r2.yzwy, r2.xxxx
  add r1.xyz, r1.xyzx, r2.xyzx

#line 18
  iadd r1.w, r1.w, l(1)
endloop 

#line 19
mov r0.x, l(1.000000)  // r0.x <- p.w

#line 20
mul r2.xyzw, cb0[0].xxxx, cb0[4].xyzw
mul r3.xyzw, cb0[0].yyyy, cb0[5].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb0[0].zzzz, cb0[6].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb0[0].wwww, cb0[7].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb0[1].xxxx, cb0[4].xyzw
mul r4.xyzw, cb0[1].yyyy, cb0[5].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb0[1].zzzz, cb0[6].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb0[1].wwww, cb0[7].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb0[2].xxxx, cb0[4].xyzw
mul r5.xyzw, cb0[2].yyyy, cb0[5].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb0[2].zzzz, cb0[6].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb0[2].wwww, cb0[7].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb0[3].xxxx, cb0[4].xyzw
mul r6.xyzw, cb0[3].yyyy, cb0[5].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, cb0[3].zzzz, cb0[6].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, cb0[3].wwww, cb0[7].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r2.xyzw, r1.xxxx, r2.xyzw
mul r3.xyzw, r1.yyyy, r3.xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r1.xyzw, r1.zzzz, r4.xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r0.xyzw, r0.xxxx, r5.xyzw
add o0.xyzw, r0.xyzw, r1.xyzw
ret 
// Approximately 60 instruction slots used
