//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   row_major float4x4 view;           // Offset:    0 Size:    64 [unused]
//   row_major float4x4 projection;     // Offset:   64 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CbScene                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOR                    0   xyzw        2     NONE   float   xyzw
//
gs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[8], immediateIndexed
dcl_input v[1][0].xyzw
dcl_input v[1][1].xyzw
dcl_temps 4
dcl_indexableTemp x0[4], 4
dcl_indexableTemp x1[4], 4
dcl_inputprimitive point 
dcl_stream m0
dcl_outputtopology trianglestrip 
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyzw
dcl_maxout 4
//
// Initial variable locations:
//   m0 <- output; 
//   v[0][0].x <- input[0].position.x; v[0][0].y <- input[0].position.y; v[0][0].z <- input[0].position.z; v[0][0].w <- input[0].position.w; 
//   v[0][1].x <- input[0].color.x; v[0][1].y <- input[0].color.y; v[0][1].z <- input[0].color.z; v[0][1].w <- input[0].color.w; 
//   x0 <- squarePosition; x1 <- texcoord
//
#line 8 "D:\就職作品\01\gameLib(ver 1.2)\Source\Shader\gpu_cloud_particle_render_gs.hlsl"
itof r0.xyzw, l(-1, 1, 0, 0)
itof r1.xyzw, l(1, 1, 0, 0)
itof r2.xyzw, l(-1, -1, 0, 0)
itof r3.xyzw, l(1, -1, 0, 0)
mov x0[0].xyzw, r0.xyzw
mov x0[1].xyzw, r1.xyzw
mov x0[2].xyzw, r2.xyzw
mov x0[3].xyzw, r3.xyzw

#line 15
itof r0.xy, l(0, 0, 0, 0)
itof r0.zw, l(0, 0, 1, 0)
itof r1.xyzw, l(0, 1, 1, 1)
mov x1[0].xy, r0.xyxx
mov x1[1].xy, r0.zwzz
mov x1[2].xy, r1.xyxx
mov x1[3].xy, r1.zwzz

#line 22
mov r0.x, l(0)  // r0.x <- i
mov r0.y, r0.x  // r0.y <- i
loop 
  ilt r0.z, r0.y, l(4)
  breakc_z r0.z

#line 25
  mov r1.xyzw, x0[r0.y + 0].xyzw
  add r1.xyzw, r1.xyzw, v[0][0].xyzw
  mul r2.xyzw, r1.xxxx, cb0[4].xyzw
  mul r3.xyzw, r1.yyyy, cb0[5].xyzw
  add r2.xyzw, r2.xyzw, r3.xyzw
  mul r3.xyzw, r1.zzzz, cb0[6].xyzw
  add r2.xyzw, r2.xyzw, r3.xyzw
  mul r1.xyzw, r1.wwww, cb0[7].xyzw
  add r1.xyzw, r1.xyzw, r2.xyzw  // r1.x <- gout.position.x; r1.y <- gout.position.y; r1.z <- gout.position.z; r1.w <- gout.position.w

#line 26
  mov r0.zw, x1[r0.y + 0].xxxy  // r0.z <- gout.texcoord.x; r0.w <- gout.texcoord.y

#line 27
  mov r2.xyzw, v[0][1].xyzw  // r2.x <- gout.color.x; r2.y <- gout.color.y; r2.z <- gout.color.z; r2.w <- gout.color.w

#line 28
  mov o0.xyzw, r1.xyzw
  mov o1.xy, r0.zwzz
  mov o2.xyzw, r2.xyzw
  emit_stream m0

#line 29
  iadd r0.y, r0.y, l(1)
endloop 

#line 30
cut_stream m0

#line 31
ret 
// Approximately 39 instruction slots used
